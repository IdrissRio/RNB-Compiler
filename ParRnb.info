-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from ParRnb.y
-----------------------------------------------------------------------------

state 100 contains 1 shift/reduce conflicts.
state 191 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	BTry -> L_BTry                                     (1)
	BCatch -> L_BCatch                                 (2)
	BLoop -> L_BLoop                                   (3)
	BCase -> L_BCase                                   (4)
	BAss -> L_BAss                                     (5)
	BPlus -> L_BPlus                                   (6)
	BMinus -> L_BMinus                                 (7)
	BDiv -> L_BDiv                                     (8)
	BMul -> L_BMul                                     (9)
	BUpTo -> L_BUpTo                                   (10)
	BMod -> L_BMod                                     (11)
	BAnd -> L_BAnd                                     (12)
	BOr -> L_BOr                                       (13)
	BNot -> L_BNot                                     (14)
	BLBra -> L_BLBra                                   (15)
	BLe -> L_BLe                                       (16)
	BLeEq -> L_BLeEq                                   (17)
	BGr -> L_BGr                                       (18)
	BGrEq -> L_BGrEq                                   (19)
	BNotEq -> L_BNotEq                                 (20)
	BEq -> L_BEq                                       (21)
	BBool -> L_BBool                                   (22)
	BReturn -> L_BReturn                               (23)
	BExit -> L_BExit                                   (24)
	BContinue -> L_BContinue                           (25)
	BExitOn -> L_BExitOn                               (26)
	BIdent -> L_BIdent                                 (27)
	BInteger -> L_BInteger                             (28)
	BReal -> L_BReal                                   (29)
	BChar -> L_BChar                                   (30)
	BString -> L_BString                               (31)
	Program -> ListDecl                                (32)
	Decl -> BIdent ':' Type ';'                        (33)
	Decl -> BIdent ':' Type BAss Expr ';'              (34)
	Decl -> 'const' BIdent ':' Type BAss Expr ';'      (35)
	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent   (36)
	Decl -> 'proc' BIdent '(' ListParam ')' 'is' ListStmt 'end' BIdent   (37)
	ListDecl ->                                        (38)
	ListDecl -> ListDecl Decl                          (39)
	Param -> BIdent ':' Mod Type                       (40)
	ListParam ->                                       (41)
	ListParam -> Param                                 (42)
	ListParam -> Param ',' ListParam                   (43)
	Mod -> 'ref'                                       (44)
	Mod ->                                             (45)
	Mod -> 'const'                                     (46)
	Mod -> 'res'                                       (47)
	Mod -> 'valres'                                    (48)
	Expr7 -> Val                                       (49)
	Expr7 -> BLBra ListExpr ']'                        (50)
	Expr7 -> 'create' 'Array' BLe Type BGr '(' Expr ')'   (51)
	Expr7 -> '§' LeftExpr                              (52)
	Expr7 -> LeftExpr                                  (53)
	Expr6 -> BIdent '(' ListExpr ')'                   (54)
	Expr6 -> '(' Expr ')'                              (55)
	Expr6 -> LeftExpr '++'                             (56)
	Expr6 -> LeftExpr '--'                             (57)
	Expr6 -> Expr7                                     (58)
	Expr5 -> Expr5 BUpTo Expr6                         (59)
	Expr5 -> Expr6                                     (60)
	Expr3 -> Expr3 BMul Expr4                          (61)
	Expr3 -> Expr3 BMod Expr4                          (62)
	Expr3 -> Expr3 BDiv Expr4                          (63)
	Expr3 -> BMinus Expr5                              (64)
	Expr3 -> BPlus Expr5                               (65)
	Expr3 -> Expr4                                     (66)
	Expr2 -> Expr2 BPlus Expr3                         (67)
	Expr2 -> Expr2 BMinus Expr3                        (68)
	Expr2 -> BNot Expr3                                (69)
	Expr2 -> Expr3                                     (70)
	Expr1 -> Expr1 BAnd Expr2                          (71)
	Expr1 -> Expr2                                     (72)
	Expr0 -> Expr0 BOr Expr1                           (73)
	Expr0 -> Expr0 Rel Expr1                           (74)
	Expr0 -> Expr1                                     (75)
	Expr -> Expr 'if' Expr 'else' Expr                 (76)
	Expr -> Expr0                                      (77)
	Expr4 -> Expr5                                     (78)
	ListExpr ->                                        (79)
	ListExpr -> Expr                                   (80)
	ListExpr -> Expr ',' ListExpr                      (81)
	Rel -> BLe                                         (82)
	Rel -> BLeEq                                       (83)
	Rel -> BGr                                         (84)
	Rel -> BGrEq                                       (85)
	Rel -> BNotEq                                      (86)
	Rel -> BEq                                         (87)
	Stmt -> LeftExpr BAss Expr ';'                     (88)
	Stmt -> 'if' Expr 'then' ListStmt ElseStmt 'end' 'if'   (89)
	Stmt -> BLoop ListStmt 'end' BLoop                 (90)
	Stmt -> LoopCmd ';'                                (91)
	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir Expr ')' ListStmt 'end' 'for'   (92)
	Stmt -> BReturn ';'                                (93)
	Stmt -> BCase Expr 'of' Cases 'end' BCase          (94)
	Stmt -> 'local' ListStmt 'end' 'local'             (95)
	Stmt -> Decl                                       (96)
	Stmt -> Expr ';'                                   (97)
	Stmt -> BTry ListStmt BCatch ListStmt 'end' BCatch   (98)
	ElseStmt -> 'elseif' Expr 'then' ListStmt ElseStmt   (99)
	ElseStmt -> 'else' ListStmt                        (100)
	ElseStmt ->                                        (101)
	ListStmt ->                                        (102)
	ListStmt -> ListStmt Stmt                          (103)
	Dir -> '->'                                        (104)
	Dir -> '<-'                                        (105)
	LoopCmd -> BExitOn Expr                            (106)
	LoopCmd -> BExit                                   (107)
	LoopCmd -> BContinue                               (108)
	Cases ->                                           (109)
	Cases -> 'else' ListStmt                           (110)
	Cases -> Expr '->' ListStmt Cases                  (111)
	LeftExpr1 -> BIdent                                (112)
	LeftExpr1 -> LeftExpr1 Dim                         (113)
	LeftExpr1 -> '(' LeftExpr ')'                      (114)
	LeftExpr -> '°' LeftExpr                           (115)
	LeftExpr -> '++' LeftExpr                          (116)
	LeftExpr -> '--' LeftExpr                          (117)
	LeftExpr -> LeftExpr1                              (118)
	Dim -> BLBra Expr ']'                              (119)
	Val -> BInteger                                    (120)
	Val -> BReal                                       (121)
	Val -> BChar                                       (122)
	Val -> BBool                                       (123)
	Val -> BString                                     (124)
	Type -> BType                                      (125)
	Type -> 'Array' BLe Type BGr                       (126)
	Type -> 'Array' BLe Type BGr '(' Expr ')'          (127)
	Type -> '°' Type                                   (128)
	BType -> 'int'                                     (129)
	BType -> 'real'                                    (130)
	BType -> 'char'                                    (131)
	BType -> 'bool'                                    (132)
	BType -> 'string'                                  (133)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'++'           { PT _ (TS _ 3) }
	','            { PT _ (TS _ 4) }
	'--'           { PT _ (TS _ 5) }
	'->'           { PT _ (TS _ 6) }
	':'            { PT _ (TS _ 7) }
	';'            { PT _ (TS _ 8) }
	'<-'           { PT _ (TS _ 9) }
	'Array'        { PT _ (TS _ 10) }
	']'            { PT _ (TS _ 11) }
	'bool'         { PT _ (TS _ 12) }
	'char'         { PT _ (TS _ 13) }
	'const'        { PT _ (TS _ 14) }
	'create'       { PT _ (TS _ 15) }
	'else'         { PT _ (TS _ 16) }
	'elseif'       { PT _ (TS _ 17) }
	'end'          { PT _ (TS _ 18) }
	'for'          { PT _ (TS _ 19) }
	'func'         { PT _ (TS _ 20) }
	'if'           { PT _ (TS _ 21) }
	'int'          { PT _ (TS _ 22) }
	'is'           { PT _ (TS _ 23) }
	'local'        { PT _ (TS _ 24) }
	'of'           { PT _ (TS _ 25) }
	'proc'         { PT _ (TS _ 26) }
	'real'         { PT _ (TS _ 27) }
	'ref'          { PT _ (TS _ 28) }
	'res'          { PT _ (TS _ 29) }
	'string'       { PT _ (TS _ 30) }
	'then'         { PT _ (TS _ 31) }
	'valres'       { PT _ (TS _ 32) }
	'§'            { PT _ (TS _ 33) }
	'°'            { PT _ (TS _ 34) }
	L_BTry         { PT _ (T_BTry _) }
	L_BCatch       { PT _ (T_BCatch _) }
	L_BLoop        { PT _ (T_BLoop _) }
	L_BCase        { PT _ (T_BCase _) }
	L_BAss         { PT _ (T_BAss _) }
	L_BPlus        { PT _ (T_BPlus _) }
	L_BMinus       { PT _ (T_BMinus _) }
	L_BDiv         { PT _ (T_BDiv _) }
	L_BMul         { PT _ (T_BMul _) }
	L_BUpTo        { PT _ (T_BUpTo _) }
	L_BMod         { PT _ (T_BMod _) }
	L_BAnd         { PT _ (T_BAnd _) }
	L_BOr          { PT _ (T_BOr _) }
	L_BNot         { PT _ (T_BNot _) }
	L_BLBra        { PT _ (T_BLBra _) }
	L_BLe          { PT _ (T_BLe _) }
	L_BLeEq        { PT _ (T_BLeEq _) }
	L_BGr          { PT _ (T_BGr _) }
	L_BGrEq        { PT _ (T_BGrEq _) }
	L_BNotEq       { PT _ (T_BNotEq _) }
	L_BEq          { PT _ (T_BEq _) }
	L_BBool        { PT _ (T_BBool _) }
	L_BReturn      { PT _ (T_BReturn _) }
	L_BExit        { PT _ (T_BExit _) }
	L_BContinue    { PT _ (T_BContinue _) }
	L_BExitOn      { PT _ (T_BExitOn _) }
	L_BIdent       { PT _ (T_BIdent _) }
	L_BInteger     { PT _ (T_BInteger _) }
	L_BReal        { PT _ (T_BReal _) }
	L_BChar        { PT _ (T_BChar _) }
	L_BString      { PT _ (T_BString _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	BTry            rule  1
	BCatch          rule  2
	BLoop           rule  3
	BCase           rule  4
	BAss            rule  5
	BPlus           rule  6
	BMinus          rule  7
	BDiv            rule  8
	BMul            rule  9
	BUpTo           rule  10
	BMod            rule  11
	BAnd            rule  12
	BOr             rule  13
	BNot            rule  14
	BLBra           rule  15
	BLe             rule  16
	BLeEq           rule  17
	BGr             rule  18
	BGrEq           rule  19
	BNotEq          rule  20
	BEq             rule  21
	BBool           rule  22
	BReturn         rule  23
	BExit           rule  24
	BContinue       rule  25
	BExitOn         rule  26
	BIdent          rule  27
	BInteger        rule  28
	BReal           rule  29
	BChar           rule  30
	BString         rule  31
	Program         rule  32
	Decl            rules 33, 34, 35, 36, 37
	ListDecl        rules 38, 39
	Param           rule  40
	ListParam       rules 41, 42, 43
	Mod             rules 44, 45, 46, 47, 48
	Expr7           rules 49, 50, 51, 52, 53
	Expr6           rules 54, 55, 56, 57, 58
	Expr5           rules 59, 60
	Expr3           rules 61, 62, 63, 64, 65, 66
	Expr2           rules 67, 68, 69, 70
	Expr1           rules 71, 72
	Expr0           rules 73, 74, 75
	Expr            rules 76, 77
	Expr4           rule  78
	ListExpr        rules 79, 80, 81
	Rel             rules 82, 83, 84, 85, 86, 87
	Stmt            rules 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98
	ElseStmt        rules 99, 100, 101
	ListStmt        rules 102, 103
	Dir             rules 104, 105
	LoopCmd         rules 106, 107, 108
	Cases           rules 109, 110, 111
	LeftExpr1       rules 112, 113, 114
	LeftExpr        rules 115, 116, 117, 118
	Dim             rule  119
	Val             rules 120, 121, 122, 123, 124
	Type            rules 125, 126, 127, 128
	BType           rules 129, 130, 131, 132, 133

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'const'        reduce using rule 38
	'func'         reduce using rule 38
	'proc'         reduce using rule 38
	L_BIdent       reduce using rule 38
	%eof           reduce using rule 38

	Program        goto state 3
	ListDecl       goto state 4

State 1


	L_BTry         shift, and enter state 2


State 2

	BTry -> L_BTry .                                    (rule 1)

	'('            reduce using rule 1
	'++'           reduce using rule 1
	'--'           reduce using rule 1
	'const'        reduce using rule 1
	'create'       reduce using rule 1
	'for'          reduce using rule 1
	'func'         reduce using rule 1
	'if'           reduce using rule 1
	'local'        reduce using rule 1
	'proc'         reduce using rule 1
	'§'            reduce using rule 1
	'°'            reduce using rule 1
	L_BTry         reduce using rule 1
	L_BCatch       reduce using rule 1
	L_BLoop        reduce using rule 1
	L_BCase        reduce using rule 1
	L_BPlus        reduce using rule 1
	L_BMinus       reduce using rule 1
	L_BNot         reduce using rule 1
	L_BLBra        reduce using rule 1
	L_BBool        reduce using rule 1
	L_BReturn      reduce using rule 1
	L_BExit        reduce using rule 1
	L_BContinue    reduce using rule 1
	L_BExitOn      reduce using rule 1
	L_BIdent       reduce using rule 1
	L_BInteger     reduce using rule 1
	L_BReal        reduce using rule 1
	L_BChar        reduce using rule 1
	L_BString      reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	Program -> ListDecl .                               (rule 32)
	ListDecl -> ListDecl . Decl                         (rule 39)

	'const'        shift, and enter state 7
	'func'         shift, and enter state 8
	'proc'         shift, and enter state 9
	L_BIdent       shift, and enter state 10
	%eof           reduce using rule 32

	BIdent         goto state 5
	Decl           goto state 6

State 5

	Decl -> BIdent . ':' Type ';'                       (rule 33)
	Decl -> BIdent . ':' Type BAss Expr ';'             (rule 34)

	':'            shift, and enter state 14


State 6

	ListDecl -> ListDecl Decl .                         (rule 39)

	'const'        reduce using rule 39
	'func'         reduce using rule 39
	'proc'         reduce using rule 39
	L_BIdent       reduce using rule 39
	%eof           reduce using rule 39


State 7

	Decl -> 'const' . BIdent ':' Type BAss Expr ';'     (rule 35)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 13

State 8

	Decl -> 'func' . BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 12

State 9

	Decl -> 'proc' . BIdent '(' ListParam ')' 'is' ListStmt 'end' BIdent    (rule 37)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 11

State 10

	BIdent -> L_BIdent .                                (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	'++'           reduce using rule 27
	','            reduce using rule 27
	'--'           reduce using rule 27
	'->'           reduce using rule 27
	':'            reduce using rule 27
	';'            reduce using rule 27
	'<-'           reduce using rule 27
	']'            reduce using rule 27
	'const'        reduce using rule 27
	'create'       reduce using rule 27
	'else'         reduce using rule 27
	'elseif'       reduce using rule 27
	'end'          reduce using rule 27
	'for'          reduce using rule 27
	'func'         reduce using rule 27
	'if'           reduce using rule 27
	'local'        reduce using rule 27
	'of'           reduce using rule 27
	'proc'         reduce using rule 27
	'then'         reduce using rule 27
	'§'            reduce using rule 27
	'°'            reduce using rule 27
	L_BTry         reduce using rule 27
	L_BCatch       reduce using rule 27
	L_BLoop        reduce using rule 27
	L_BCase        reduce using rule 27
	L_BAss         reduce using rule 27
	L_BPlus        reduce using rule 27
	L_BMinus       reduce using rule 27
	L_BDiv         reduce using rule 27
	L_BMul         reduce using rule 27
	L_BUpTo        reduce using rule 27
	L_BMod         reduce using rule 27
	L_BAnd         reduce using rule 27
	L_BOr          reduce using rule 27
	L_BNot         reduce using rule 27
	L_BLBra        reduce using rule 27
	L_BLe          reduce using rule 27
	L_BLeEq        reduce using rule 27
	L_BGr          reduce using rule 27
	L_BGrEq        reduce using rule 27
	L_BNotEq       reduce using rule 27
	L_BEq          reduce using rule 27
	L_BBool        reduce using rule 27
	L_BReturn      reduce using rule 27
	L_BExit        reduce using rule 27
	L_BContinue    reduce using rule 27
	L_BExitOn      reduce using rule 27
	L_BIdent       reduce using rule 27
	L_BInteger     reduce using rule 27
	L_BReal        reduce using rule 27
	L_BChar        reduce using rule 27
	L_BString      reduce using rule 27
	%eof           reduce using rule 27


State 11

	Decl -> 'proc' BIdent . '(' ListParam ')' 'is' ListStmt 'end' BIdent    (rule 37)

	'('            shift, and enter state 26


State 12

	Decl -> 'func' BIdent . '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	'('            shift, and enter state 25


State 13

	Decl -> 'const' BIdent . ':' Type BAss Expr ';'     (rule 35)

	':'            shift, and enter state 24


State 14

	Decl -> BIdent ':' . Type ';'                       (rule 33)
	Decl -> BIdent ':' . Type BAss Expr ';'             (rule 34)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 15
	BType          goto state 16

State 15

	Decl -> BIdent ':' Type . ';'                       (rule 33)
	Decl -> BIdent ':' Type . BAss Expr ';'             (rule 34)

	';'            shift, and enter state 36
	L_BAss         shift, and enter state 37

	BAss           goto state 35

State 16

	Type -> BType .                                     (rule 125)

	')'            reduce using rule 125
	','            reduce using rule 125
	';'            reduce using rule 125
	L_BAss         reduce using rule 125
	L_BGr          reduce using rule 125


State 17

	Type -> 'Array' . BLe Type BGr                      (rule 126)
	Type -> 'Array' . BLe Type BGr '(' Expr ')'         (rule 127)

	L_BLe          shift, and enter state 34

	BLe            goto state 33

State 18

	BType -> 'bool' .                                   (rule 132)

	')'            reduce using rule 132
	','            reduce using rule 132
	';'            reduce using rule 132
	L_BAss         reduce using rule 132
	L_BGr          reduce using rule 132


State 19

	BType -> 'char' .                                   (rule 131)

	')'            reduce using rule 131
	','            reduce using rule 131
	';'            reduce using rule 131
	L_BAss         reduce using rule 131
	L_BGr          reduce using rule 131


State 20

	BType -> 'int' .                                    (rule 129)

	')'            reduce using rule 129
	','            reduce using rule 129
	';'            reduce using rule 129
	L_BAss         reduce using rule 129
	L_BGr          reduce using rule 129


State 21

	BType -> 'real' .                                   (rule 130)

	')'            reduce using rule 130
	','            reduce using rule 130
	';'            reduce using rule 130
	L_BAss         reduce using rule 130
	L_BGr          reduce using rule 130


State 22

	BType -> 'string' .                                 (rule 133)

	')'            reduce using rule 133
	','            reduce using rule 133
	';'            reduce using rule 133
	L_BAss         reduce using rule 133
	L_BGr          reduce using rule 133


State 23

	Type -> '°' . Type                                  (rule 128)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 32
	BType          goto state 16

State 24

	Decl -> 'const' BIdent ':' . Type BAss Expr ';'     (rule 35)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 31
	BType          goto state 16

State 25

	Decl -> 'func' BIdent '(' . ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	')'            reduce using rule 41
	L_BIdent       shift, and enter state 10

	BIdent         goto state 27
	Param          goto state 28
	ListParam      goto state 30

State 26

	Decl -> 'proc' BIdent '(' . ListParam ')' 'is' ListStmt 'end' BIdent    (rule 37)

	')'            reduce using rule 41
	L_BIdent       shift, and enter state 10

	BIdent         goto state 27
	Param          goto state 28
	ListParam      goto state 29

State 27

	Param -> BIdent . ':' Mod Type                      (rule 40)

	':'            shift, and enter state 80


State 28

	ListParam -> Param .                                (rule 42)
	ListParam -> Param . ',' ListParam                  (rule 43)

	')'            reduce using rule 42
	','            shift, and enter state 79


State 29

	Decl -> 'proc' BIdent '(' ListParam . ')' 'is' ListStmt 'end' BIdent    (rule 37)

	')'            shift, and enter state 78


State 30

	Decl -> 'func' BIdent '(' ListParam . ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	')'            shift, and enter state 77


State 31

	Decl -> 'const' BIdent ':' Type . BAss Expr ';'     (rule 35)

	L_BAss         shift, and enter state 37

	BAss           goto state 76

State 32

	Type -> '°' Type .                                  (rule 128)

	')'            reduce using rule 128
	','            reduce using rule 128
	';'            reduce using rule 128
	L_BAss         reduce using rule 128
	L_BGr          reduce using rule 128


State 33

	Type -> 'Array' BLe . Type BGr                      (rule 126)
	Type -> 'Array' BLe . Type BGr '(' Expr ')'         (rule 127)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 75
	BType          goto state 16

State 34

	BLe -> L_BLe .                                      (rule 16)

	'('            reduce using rule 16
	'++'           reduce using rule 16
	'--'           reduce using rule 16
	'Array'        reduce using rule 16
	'bool'         reduce using rule 16
	'char'         reduce using rule 16
	'create'       reduce using rule 16
	'int'          reduce using rule 16
	'real'         reduce using rule 16
	'string'       reduce using rule 16
	'§'            reduce using rule 16
	'°'            reduce using rule 16
	L_BPlus        reduce using rule 16
	L_BMinus       reduce using rule 16
	L_BNot         reduce using rule 16
	L_BLBra        reduce using rule 16
	L_BBool        reduce using rule 16
	L_BIdent       reduce using rule 16
	L_BInteger     reduce using rule 16
	L_BReal        reduce using rule 16
	L_BChar        reduce using rule 16
	L_BString      reduce using rule 16


State 35

	Decl -> BIdent ':' Type BAss . Expr ';'             (rule 34)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 55
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 36

	Decl -> BIdent ':' Type ';' .                       (rule 33)

	'('            reduce using rule 33
	'++'           reduce using rule 33
	'--'           reduce using rule 33
	'const'        reduce using rule 33
	'create'       reduce using rule 33
	'else'         reduce using rule 33
	'elseif'       reduce using rule 33
	'end'          reduce using rule 33
	'for'          reduce using rule 33
	'func'         reduce using rule 33
	'if'           reduce using rule 33
	'local'        reduce using rule 33
	'proc'         reduce using rule 33
	'§'            reduce using rule 33
	'°'            reduce using rule 33
	L_BTry         reduce using rule 33
	L_BCatch       reduce using rule 33
	L_BLoop        reduce using rule 33
	L_BCase        reduce using rule 33
	L_BPlus        reduce using rule 33
	L_BMinus       reduce using rule 33
	L_BNot         reduce using rule 33
	L_BLBra        reduce using rule 33
	L_BBool        reduce using rule 33
	L_BReturn      reduce using rule 33
	L_BExit        reduce using rule 33
	L_BContinue    reduce using rule 33
	L_BExitOn      reduce using rule 33
	L_BIdent       reduce using rule 33
	L_BInteger     reduce using rule 33
	L_BReal        reduce using rule 33
	L_BChar        reduce using rule 33
	L_BString      reduce using rule 33
	%eof           reduce using rule 33


State 37

	BAss -> L_BAss .                                    (rule 5)

	'('            reduce using rule 5
	'++'           reduce using rule 5
	'--'           reduce using rule 5
	'create'       reduce using rule 5
	'§'            reduce using rule 5
	'°'            reduce using rule 5
	L_BPlus        reduce using rule 5
	L_BMinus       reduce using rule 5
	L_BNot         reduce using rule 5
	L_BLBra        reduce using rule 5
	L_BBool        reduce using rule 5
	L_BIdent       reduce using rule 5
	L_BInteger     reduce using rule 5
	L_BReal        reduce using rule 5
	L_BChar        reduce using rule 5
	L_BString      reduce using rule 5


State 38

	Expr3 -> BPlus . Expr5                              (rule 65)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 137
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 39

	Expr3 -> BMinus . Expr5                             (rule 64)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 136
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 40

	Expr2 -> BNot . Expr3                               (rule 69)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 135
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 41

	Expr7 -> BLBra . ListExpr ']'                       (rule 50)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	']'            reduce using rule 79
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 133
	Expr4          goto state 56
	ListExpr       goto state 134
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 42

	Val -> BBool .                                      (rule 123)

	')'            reduce using rule 123
	','            reduce using rule 123
	'->'           reduce using rule 123
	';'            reduce using rule 123
	'<-'           reduce using rule 123
	']'            reduce using rule 123
	'else'         reduce using rule 123
	'if'           reduce using rule 123
	'of'           reduce using rule 123
	'then'         reduce using rule 123
	L_BPlus        reduce using rule 123
	L_BMinus       reduce using rule 123
	L_BDiv         reduce using rule 123
	L_BMul         reduce using rule 123
	L_BUpTo        reduce using rule 123
	L_BMod         reduce using rule 123
	L_BAnd         reduce using rule 123
	L_BOr          reduce using rule 123
	L_BLe          reduce using rule 123
	L_BLeEq        reduce using rule 123
	L_BGr          reduce using rule 123
	L_BGrEq        reduce using rule 123
	L_BNotEq       reduce using rule 123
	L_BEq          reduce using rule 123


State 43

	Expr6 -> BIdent . '(' ListExpr ')'                  (rule 54)
	LeftExpr1 -> BIdent .                               (rule 112)

	'('            shift, and enter state 132
	')'            reduce using rule 112
	'++'           reduce using rule 112
	','            reduce using rule 112
	'--'           reduce using rule 112
	'->'           reduce using rule 112
	';'            reduce using rule 112
	'<-'           reduce using rule 112
	']'            reduce using rule 112
	'else'         reduce using rule 112
	'if'           reduce using rule 112
	'of'           reduce using rule 112
	'then'         reduce using rule 112
	L_BPlus        reduce using rule 112
	L_BMinus       reduce using rule 112
	L_BDiv         reduce using rule 112
	L_BMul         reduce using rule 112
	L_BUpTo        reduce using rule 112
	L_BMod         reduce using rule 112
	L_BAnd         reduce using rule 112
	L_BOr          reduce using rule 112
	L_BLBra        reduce using rule 112
	L_BLe          reduce using rule 112
	L_BLeEq        reduce using rule 112
	L_BGr          reduce using rule 112
	L_BGrEq        reduce using rule 112
	L_BNotEq       reduce using rule 112
	L_BEq          reduce using rule 112


State 44

	Val -> BInteger .                                   (rule 120)

	')'            reduce using rule 120
	','            reduce using rule 120
	'->'           reduce using rule 120
	';'            reduce using rule 120
	'<-'           reduce using rule 120
	']'            reduce using rule 120
	'else'         reduce using rule 120
	'if'           reduce using rule 120
	'of'           reduce using rule 120
	'then'         reduce using rule 120
	L_BPlus        reduce using rule 120
	L_BMinus       reduce using rule 120
	L_BDiv         reduce using rule 120
	L_BMul         reduce using rule 120
	L_BUpTo        reduce using rule 120
	L_BMod         reduce using rule 120
	L_BAnd         reduce using rule 120
	L_BOr          reduce using rule 120
	L_BLe          reduce using rule 120
	L_BLeEq        reduce using rule 120
	L_BGr          reduce using rule 120
	L_BGrEq        reduce using rule 120
	L_BNotEq       reduce using rule 120
	L_BEq          reduce using rule 120


State 45

	Val -> BReal .                                      (rule 121)

	')'            reduce using rule 121
	','            reduce using rule 121
	'->'           reduce using rule 121
	';'            reduce using rule 121
	'<-'           reduce using rule 121
	']'            reduce using rule 121
	'else'         reduce using rule 121
	'if'           reduce using rule 121
	'of'           reduce using rule 121
	'then'         reduce using rule 121
	L_BPlus        reduce using rule 121
	L_BMinus       reduce using rule 121
	L_BDiv         reduce using rule 121
	L_BMul         reduce using rule 121
	L_BUpTo        reduce using rule 121
	L_BMod         reduce using rule 121
	L_BAnd         reduce using rule 121
	L_BOr          reduce using rule 121
	L_BLe          reduce using rule 121
	L_BLeEq        reduce using rule 121
	L_BGr          reduce using rule 121
	L_BGrEq        reduce using rule 121
	L_BNotEq       reduce using rule 121
	L_BEq          reduce using rule 121


State 46

	Val -> BChar .                                      (rule 122)

	')'            reduce using rule 122
	','            reduce using rule 122
	'->'           reduce using rule 122
	';'            reduce using rule 122
	'<-'           reduce using rule 122
	']'            reduce using rule 122
	'else'         reduce using rule 122
	'if'           reduce using rule 122
	'of'           reduce using rule 122
	'then'         reduce using rule 122
	L_BPlus        reduce using rule 122
	L_BMinus       reduce using rule 122
	L_BDiv         reduce using rule 122
	L_BMul         reduce using rule 122
	L_BUpTo        reduce using rule 122
	L_BMod         reduce using rule 122
	L_BAnd         reduce using rule 122
	L_BOr          reduce using rule 122
	L_BLe          reduce using rule 122
	L_BLeEq        reduce using rule 122
	L_BGr          reduce using rule 122
	L_BGrEq        reduce using rule 122
	L_BNotEq       reduce using rule 122
	L_BEq          reduce using rule 122


State 47

	Val -> BString .                                    (rule 124)

	')'            reduce using rule 124
	','            reduce using rule 124
	'->'           reduce using rule 124
	';'            reduce using rule 124
	'<-'           reduce using rule 124
	']'            reduce using rule 124
	'else'         reduce using rule 124
	'if'           reduce using rule 124
	'of'           reduce using rule 124
	'then'         reduce using rule 124
	L_BPlus        reduce using rule 124
	L_BMinus       reduce using rule 124
	L_BDiv         reduce using rule 124
	L_BMul         reduce using rule 124
	L_BUpTo        reduce using rule 124
	L_BMod         reduce using rule 124
	L_BAnd         reduce using rule 124
	L_BOr          reduce using rule 124
	L_BLe          reduce using rule 124
	L_BLeEq        reduce using rule 124
	L_BGr          reduce using rule 124
	L_BGrEq        reduce using rule 124
	L_BNotEq       reduce using rule 124
	L_BEq          reduce using rule 124


State 48

	Expr6 -> Expr7 .                                    (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	'->'           reduce using rule 58
	';'            reduce using rule 58
	'<-'           reduce using rule 58
	']'            reduce using rule 58
	'else'         reduce using rule 58
	'if'           reduce using rule 58
	'of'           reduce using rule 58
	'then'         reduce using rule 58
	L_BPlus        reduce using rule 58
	L_BMinus       reduce using rule 58
	L_BDiv         reduce using rule 58
	L_BMul         reduce using rule 58
	L_BUpTo        reduce using rule 58
	L_BMod         reduce using rule 58
	L_BAnd         reduce using rule 58
	L_BOr          reduce using rule 58
	L_BLe          reduce using rule 58
	L_BLeEq        reduce using rule 58
	L_BGr          reduce using rule 58
	L_BGrEq        reduce using rule 58
	L_BNotEq       reduce using rule 58
	L_BEq          reduce using rule 58


State 49

	Expr5 -> Expr6 .                                    (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	'->'           reduce using rule 60
	';'            reduce using rule 60
	'<-'           reduce using rule 60
	']'            reduce using rule 60
	'else'         reduce using rule 60
	'if'           reduce using rule 60
	'of'           reduce using rule 60
	'then'         reduce using rule 60
	L_BPlus        reduce using rule 60
	L_BMinus       reduce using rule 60
	L_BDiv         reduce using rule 60
	L_BMul         reduce using rule 60
	L_BUpTo        reduce using rule 60
	L_BMod         reduce using rule 60
	L_BAnd         reduce using rule 60
	L_BOr          reduce using rule 60
	L_BLe          reduce using rule 60
	L_BLeEq        reduce using rule 60
	L_BGr          reduce using rule 60
	L_BGrEq        reduce using rule 60
	L_BNotEq       reduce using rule 60
	L_BEq          reduce using rule 60


State 50

	Expr5 -> Expr5 . BUpTo Expr6                        (rule 59)
	Expr4 -> Expr5 .                                    (rule 78)

	')'            reduce using rule 78
	','            reduce using rule 78
	'->'           reduce using rule 78
	';'            reduce using rule 78
	'<-'           reduce using rule 78
	']'            reduce using rule 78
	'else'         reduce using rule 78
	'if'           reduce using rule 78
	'of'           reduce using rule 78
	'then'         reduce using rule 78
	L_BPlus        reduce using rule 78
	L_BMinus       reduce using rule 78
	L_BDiv         reduce using rule 78
	L_BMul         reduce using rule 78
	L_BUpTo        shift, and enter state 131
	L_BMod         reduce using rule 78
	L_BAnd         reduce using rule 78
	L_BOr          reduce using rule 78
	L_BLe          reduce using rule 78
	L_BLeEq        reduce using rule 78
	L_BGr          reduce using rule 78
	L_BGrEq        reduce using rule 78
	L_BNotEq       reduce using rule 78
	L_BEq          reduce using rule 78

	BUpTo          goto state 130

State 51

	Expr3 -> Expr3 . BMul Expr4                         (rule 61)
	Expr3 -> Expr3 . BMod Expr4                         (rule 62)
	Expr3 -> Expr3 . BDiv Expr4                         (rule 63)
	Expr2 -> Expr3 .                                    (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	'->'           reduce using rule 70
	';'            reduce using rule 70
	'<-'           reduce using rule 70
	']'            reduce using rule 70
	'else'         reduce using rule 70
	'if'           reduce using rule 70
	'of'           reduce using rule 70
	'then'         reduce using rule 70
	L_BPlus        reduce using rule 70
	L_BMinus       reduce using rule 70
	L_BDiv         shift, and enter state 127
	L_BMul         shift, and enter state 128
	L_BMod         shift, and enter state 129
	L_BAnd         reduce using rule 70
	L_BOr          reduce using rule 70
	L_BLe          reduce using rule 70
	L_BLeEq        reduce using rule 70
	L_BGr          reduce using rule 70
	L_BGrEq        reduce using rule 70
	L_BNotEq       reduce using rule 70
	L_BEq          reduce using rule 70

	BDiv           goto state 124
	BMul           goto state 125
	BMod           goto state 126

State 52

	Expr2 -> Expr2 . BPlus Expr3                        (rule 67)
	Expr2 -> Expr2 . BMinus Expr3                       (rule 68)
	Expr1 -> Expr2 .                                    (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	'->'           reduce using rule 72
	';'            reduce using rule 72
	'<-'           reduce using rule 72
	']'            reduce using rule 72
	'else'         reduce using rule 72
	'if'           reduce using rule 72
	'of'           reduce using rule 72
	'then'         reduce using rule 72
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BAnd         reduce using rule 72
	L_BOr          reduce using rule 72
	L_BLe          reduce using rule 72
	L_BLeEq        reduce using rule 72
	L_BGr          reduce using rule 72
	L_BGrEq        reduce using rule 72
	L_BNotEq       reduce using rule 72
	L_BEq          reduce using rule 72

	BPlus          goto state 122
	BMinus         goto state 123

State 53

	Expr1 -> Expr1 . BAnd Expr2                         (rule 71)
	Expr0 -> Expr1 .                                    (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	'->'           reduce using rule 75
	';'            reduce using rule 75
	'<-'           reduce using rule 75
	']'            reduce using rule 75
	'else'         reduce using rule 75
	'if'           reduce using rule 75
	'of'           reduce using rule 75
	'then'         reduce using rule 75
	L_BAnd         shift, and enter state 121
	L_BOr          reduce using rule 75
	L_BLe          reduce using rule 75
	L_BLeEq        reduce using rule 75
	L_BGr          reduce using rule 75
	L_BGrEq        reduce using rule 75
	L_BNotEq       reduce using rule 75
	L_BEq          reduce using rule 75

	BAnd           goto state 120

State 54

	Expr0 -> Expr0 . BOr Expr1                          (rule 73)
	Expr0 -> Expr0 . Rel Expr1                          (rule 74)
	Expr -> Expr0 .                                     (rule 77)

	')'            reduce using rule 77
	','            reduce using rule 77
	'->'           reduce using rule 77
	';'            reduce using rule 77
	'<-'           reduce using rule 77
	']'            reduce using rule 77
	'else'         reduce using rule 77
	'if'           reduce using rule 77
	'of'           reduce using rule 77
	'then'         reduce using rule 77
	L_BOr          shift, and enter state 115
	L_BLe          shift, and enter state 34
	L_BLeEq        shift, and enter state 116
	L_BGr          shift, and enter state 91
	L_BGrEq        shift, and enter state 117
	L_BNotEq       shift, and enter state 118
	L_BEq          shift, and enter state 119

	BOr            goto state 107
	BLe            goto state 108
	BLeEq          goto state 109
	BGr            goto state 110
	BGrEq          goto state 111
	BNotEq         goto state 112
	BEq            goto state 113
	Rel            goto state 114

State 55

	Decl -> BIdent ':' Type BAss Expr . ';'             (rule 34)
	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)

	';'            shift, and enter state 105
	'if'           shift, and enter state 106


State 56

	Expr3 -> Expr4 .                                    (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	'->'           reduce using rule 66
	';'            reduce using rule 66
	'<-'           reduce using rule 66
	']'            reduce using rule 66
	'else'         reduce using rule 66
	'if'           reduce using rule 66
	'of'           reduce using rule 66
	'then'         reduce using rule 66
	L_BPlus        reduce using rule 66
	L_BMinus       reduce using rule 66
	L_BDiv         reduce using rule 66
	L_BMul         reduce using rule 66
	L_BMod         reduce using rule 66
	L_BAnd         reduce using rule 66
	L_BOr          reduce using rule 66
	L_BLe          reduce using rule 66
	L_BLeEq        reduce using rule 66
	L_BGr          reduce using rule 66
	L_BGrEq        reduce using rule 66
	L_BNotEq       reduce using rule 66
	L_BEq          reduce using rule 66


State 57

	LeftExpr1 -> LeftExpr1 . Dim                        (rule 113)
	LeftExpr -> LeftExpr1 .                             (rule 118)

	')'            reduce using rule 118
	'++'           reduce using rule 118
	','            reduce using rule 118
	'--'           reduce using rule 118
	'->'           reduce using rule 118
	';'            reduce using rule 118
	'<-'           reduce using rule 118
	']'            reduce using rule 118
	'else'         reduce using rule 118
	'if'           reduce using rule 118
	'of'           reduce using rule 118
	'then'         reduce using rule 118
	L_BAss         reduce using rule 118
	L_BPlus        reduce using rule 118
	L_BMinus       reduce using rule 118
	L_BDiv         reduce using rule 118
	L_BMul         reduce using rule 118
	L_BUpTo        reduce using rule 118
	L_BMod         reduce using rule 118
	L_BAnd         reduce using rule 118
	L_BOr          reduce using rule 118
	L_BLBra        shift, and enter state 69
	L_BLe          reduce using rule 118
	L_BLeEq        reduce using rule 118
	L_BGr          reduce using rule 118
	L_BGrEq        reduce using rule 118
	L_BNotEq       reduce using rule 118
	L_BEq          reduce using rule 118

	BLBra          goto state 103
	Dim            goto state 104

State 58

	Expr7 -> LeftExpr .                                 (rule 53)
	Expr6 -> LeftExpr . '++'                            (rule 56)
	Expr6 -> LeftExpr . '--'                            (rule 57)

	')'            reduce using rule 53
	'++'           shift, and enter state 101
	','            reduce using rule 53
	'--'           shift, and enter state 102
	'->'           reduce using rule 53
	';'            reduce using rule 53
	'<-'           reduce using rule 53
	']'            reduce using rule 53
	'else'         reduce using rule 53
	'if'           reduce using rule 53
	'of'           reduce using rule 53
	'then'         reduce using rule 53
	L_BPlus        reduce using rule 53
	L_BMinus       reduce using rule 53
	L_BDiv         reduce using rule 53
	L_BMul         reduce using rule 53
	L_BUpTo        reduce using rule 53
	L_BMod         reduce using rule 53
	L_BAnd         reduce using rule 53
	L_BOr          reduce using rule 53
	L_BLe          reduce using rule 53
	L_BLeEq        reduce using rule 53
	L_BGr          reduce using rule 53
	L_BGrEq        reduce using rule 53
	L_BNotEq       reduce using rule 53
	L_BEq          reduce using rule 53


State 59

	Expr7 -> Val .                                      (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	'->'           reduce using rule 49
	';'            reduce using rule 49
	'<-'           reduce using rule 49
	']'            reduce using rule 49
	'else'         reduce using rule 49
	'if'           reduce using rule 49
	'of'           reduce using rule 49
	'then'         reduce using rule 49
	L_BPlus        reduce using rule 49
	L_BMinus       reduce using rule 49
	L_BDiv         reduce using rule 49
	L_BMul         reduce using rule 49
	L_BUpTo        reduce using rule 49
	L_BMod         reduce using rule 49
	L_BAnd         reduce using rule 49
	L_BOr          reduce using rule 49
	L_BLe          reduce using rule 49
	L_BLeEq        reduce using rule 49
	L_BGr          reduce using rule 49
	L_BGrEq        reduce using rule 49
	L_BNotEq       reduce using rule 49
	L_BEq          reduce using rule 49


State 60

	Expr6 -> '(' . Expr ')'                             (rule 55)
	LeftExpr1 -> '(' . LeftExpr ')'                     (rule 114)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 99
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 100
	Val            goto state 59

State 61

	LeftExpr -> '++' . LeftExpr                         (rule 116)

	'('            shift, and enter state 94
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'°'            shift, and enter state 65
	L_BIdent       shift, and enter state 10

	BIdent         goto state 92
	LeftExpr1      goto state 57
	LeftExpr       goto state 98

State 62

	LeftExpr -> '--' . LeftExpr                         (rule 117)

	'('            shift, and enter state 94
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'°'            shift, and enter state 65
	L_BIdent       shift, and enter state 10

	BIdent         goto state 92
	LeftExpr1      goto state 57
	LeftExpr       goto state 97

State 63

	Expr7 -> 'create' . 'Array' BLe Type BGr '(' Expr ')'    (rule 51)

	'Array'        shift, and enter state 96


State 64

	Expr7 -> '§' . LeftExpr                             (rule 52)

	'('            shift, and enter state 94
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'°'            shift, and enter state 65
	L_BIdent       shift, and enter state 10

	BIdent         goto state 92
	LeftExpr1      goto state 57
	LeftExpr       goto state 95

State 65

	LeftExpr -> '°' . LeftExpr                          (rule 115)

	'('            shift, and enter state 94
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'°'            shift, and enter state 65
	L_BIdent       shift, and enter state 10

	BIdent         goto state 92
	LeftExpr1      goto state 57
	LeftExpr       goto state 93

State 66

	BPlus -> L_BPlus .                                  (rule 6)

	'('            reduce using rule 6
	'++'           reduce using rule 6
	'--'           reduce using rule 6
	'create'       reduce using rule 6
	'§'            reduce using rule 6
	'°'            reduce using rule 6
	L_BPlus        reduce using rule 6
	L_BMinus       reduce using rule 6
	L_BLBra        reduce using rule 6
	L_BBool        reduce using rule 6
	L_BIdent       reduce using rule 6
	L_BInteger     reduce using rule 6
	L_BReal        reduce using rule 6
	L_BChar        reduce using rule 6
	L_BString      reduce using rule 6


State 67

	BMinus -> L_BMinus .                                (rule 7)

	'('            reduce using rule 7
	'++'           reduce using rule 7
	'--'           reduce using rule 7
	'create'       reduce using rule 7
	'§'            reduce using rule 7
	'°'            reduce using rule 7
	L_BPlus        reduce using rule 7
	L_BMinus       reduce using rule 7
	L_BLBra        reduce using rule 7
	L_BBool        reduce using rule 7
	L_BIdent       reduce using rule 7
	L_BInteger     reduce using rule 7
	L_BReal        reduce using rule 7
	L_BChar        reduce using rule 7
	L_BString      reduce using rule 7


State 68

	BNot -> L_BNot .                                    (rule 14)

	'('            reduce using rule 14
	'++'           reduce using rule 14
	'--'           reduce using rule 14
	'create'       reduce using rule 14
	'§'            reduce using rule 14
	'°'            reduce using rule 14
	L_BPlus        reduce using rule 14
	L_BMinus       reduce using rule 14
	L_BLBra        reduce using rule 14
	L_BBool        reduce using rule 14
	L_BIdent       reduce using rule 14
	L_BInteger     reduce using rule 14
	L_BReal        reduce using rule 14
	L_BChar        reduce using rule 14
	L_BString      reduce using rule 14


State 69

	BLBra -> L_BLBra .                                  (rule 15)

	'('            reduce using rule 15
	'++'           reduce using rule 15
	'--'           reduce using rule 15
	']'            reduce using rule 15
	'create'       reduce using rule 15
	'§'            reduce using rule 15
	'°'            reduce using rule 15
	L_BPlus        reduce using rule 15
	L_BMinus       reduce using rule 15
	L_BNot         reduce using rule 15
	L_BLBra        reduce using rule 15
	L_BBool        reduce using rule 15
	L_BIdent       reduce using rule 15
	L_BInteger     reduce using rule 15
	L_BReal        reduce using rule 15
	L_BChar        reduce using rule 15
	L_BString      reduce using rule 15


State 70

	BBool -> L_BBool .                                  (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22
	'->'           reduce using rule 22
	';'            reduce using rule 22
	'<-'           reduce using rule 22
	']'            reduce using rule 22
	'else'         reduce using rule 22
	'if'           reduce using rule 22
	'of'           reduce using rule 22
	'then'         reduce using rule 22
	L_BPlus        reduce using rule 22
	L_BMinus       reduce using rule 22
	L_BDiv         reduce using rule 22
	L_BMul         reduce using rule 22
	L_BUpTo        reduce using rule 22
	L_BMod         reduce using rule 22
	L_BAnd         reduce using rule 22
	L_BOr          reduce using rule 22
	L_BLe          reduce using rule 22
	L_BLeEq        reduce using rule 22
	L_BGr          reduce using rule 22
	L_BGrEq        reduce using rule 22
	L_BNotEq       reduce using rule 22
	L_BEq          reduce using rule 22


State 71

	BInteger -> L_BInteger .                            (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	'->'           reduce using rule 28
	';'            reduce using rule 28
	'<-'           reduce using rule 28
	']'            reduce using rule 28
	'else'         reduce using rule 28
	'if'           reduce using rule 28
	'of'           reduce using rule 28
	'then'         reduce using rule 28
	L_BPlus        reduce using rule 28
	L_BMinus       reduce using rule 28
	L_BDiv         reduce using rule 28
	L_BMul         reduce using rule 28
	L_BUpTo        reduce using rule 28
	L_BMod         reduce using rule 28
	L_BAnd         reduce using rule 28
	L_BOr          reduce using rule 28
	L_BLe          reduce using rule 28
	L_BLeEq        reduce using rule 28
	L_BGr          reduce using rule 28
	L_BGrEq        reduce using rule 28
	L_BNotEq       reduce using rule 28
	L_BEq          reduce using rule 28


State 72

	BReal -> L_BReal .                                  (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	'->'           reduce using rule 29
	';'            reduce using rule 29
	'<-'           reduce using rule 29
	']'            reduce using rule 29
	'else'         reduce using rule 29
	'if'           reduce using rule 29
	'of'           reduce using rule 29
	'then'         reduce using rule 29
	L_BPlus        reduce using rule 29
	L_BMinus       reduce using rule 29
	L_BDiv         reduce using rule 29
	L_BMul         reduce using rule 29
	L_BUpTo        reduce using rule 29
	L_BMod         reduce using rule 29
	L_BAnd         reduce using rule 29
	L_BOr          reduce using rule 29
	L_BLe          reduce using rule 29
	L_BLeEq        reduce using rule 29
	L_BGr          reduce using rule 29
	L_BGrEq        reduce using rule 29
	L_BNotEq       reduce using rule 29
	L_BEq          reduce using rule 29


State 73

	BChar -> L_BChar .                                  (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	'->'           reduce using rule 30
	';'            reduce using rule 30
	'<-'           reduce using rule 30
	']'            reduce using rule 30
	'else'         reduce using rule 30
	'if'           reduce using rule 30
	'of'           reduce using rule 30
	'then'         reduce using rule 30
	L_BPlus        reduce using rule 30
	L_BMinus       reduce using rule 30
	L_BDiv         reduce using rule 30
	L_BMul         reduce using rule 30
	L_BUpTo        reduce using rule 30
	L_BMod         reduce using rule 30
	L_BAnd         reduce using rule 30
	L_BOr          reduce using rule 30
	L_BLe          reduce using rule 30
	L_BLeEq        reduce using rule 30
	L_BGr          reduce using rule 30
	L_BGrEq        reduce using rule 30
	L_BNotEq       reduce using rule 30
	L_BEq          reduce using rule 30


State 74

	BString -> L_BString .                              (rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	'->'           reduce using rule 31
	';'            reduce using rule 31
	'<-'           reduce using rule 31
	']'            reduce using rule 31
	'else'         reduce using rule 31
	'if'           reduce using rule 31
	'of'           reduce using rule 31
	'then'         reduce using rule 31
	L_BPlus        reduce using rule 31
	L_BMinus       reduce using rule 31
	L_BDiv         reduce using rule 31
	L_BMul         reduce using rule 31
	L_BUpTo        reduce using rule 31
	L_BMod         reduce using rule 31
	L_BAnd         reduce using rule 31
	L_BOr          reduce using rule 31
	L_BLe          reduce using rule 31
	L_BLeEq        reduce using rule 31
	L_BGr          reduce using rule 31
	L_BGrEq        reduce using rule 31
	L_BNotEq       reduce using rule 31
	L_BEq          reduce using rule 31


State 75

	Type -> 'Array' BLe Type . BGr                      (rule 126)
	Type -> 'Array' BLe Type . BGr '(' Expr ')'         (rule 127)

	L_BGr          shift, and enter state 91

	BGr            goto state 90

State 76

	Decl -> 'const' BIdent ':' Type BAss . Expr ';'     (rule 35)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 89
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 77

	Decl -> 'func' BIdent '(' ListParam ')' . '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	'->'           shift, and enter state 88


State 78

	Decl -> 'proc' BIdent '(' ListParam ')' . 'is' ListStmt 'end' BIdent    (rule 37)

	'is'           shift, and enter state 87


State 79

	ListParam -> Param ',' . ListParam                  (rule 43)

	')'            reduce using rule 41
	L_BIdent       shift, and enter state 10

	BIdent         goto state 27
	Param          goto state 28
	ListParam      goto state 86

State 80

	Param -> BIdent ':' . Mod Type                      (rule 40)

	'Array'        reduce using rule 45
	'bool'         reduce using rule 45
	'char'         reduce using rule 45
	'const'        shift, and enter state 82
	'int'          reduce using rule 45
	'real'         reduce using rule 45
	'ref'          shift, and enter state 83
	'res'          shift, and enter state 84
	'string'       reduce using rule 45
	'valres'       shift, and enter state 85
	'°'            reduce using rule 45

	Mod            goto state 81

State 81

	Param -> BIdent ':' Mod . Type                      (rule 40)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 160
	BType          goto state 16

State 82

	Mod -> 'const' .                                    (rule 46)

	'Array'        reduce using rule 46
	'bool'         reduce using rule 46
	'char'         reduce using rule 46
	'int'          reduce using rule 46
	'real'         reduce using rule 46
	'string'       reduce using rule 46
	'°'            reduce using rule 46


State 83

	Mod -> 'ref' .                                      (rule 44)

	'Array'        reduce using rule 44
	'bool'         reduce using rule 44
	'char'         reduce using rule 44
	'int'          reduce using rule 44
	'real'         reduce using rule 44
	'string'       reduce using rule 44
	'°'            reduce using rule 44


State 84

	Mod -> 'res' .                                      (rule 47)

	'Array'        reduce using rule 47
	'bool'         reduce using rule 47
	'char'         reduce using rule 47
	'int'          reduce using rule 47
	'real'         reduce using rule 47
	'string'       reduce using rule 47
	'°'            reduce using rule 47


State 85

	Mod -> 'valres' .                                   (rule 48)

	'Array'        reduce using rule 48
	'bool'         reduce using rule 48
	'char'         reduce using rule 48
	'int'          reduce using rule 48
	'real'         reduce using rule 48
	'string'       reduce using rule 48
	'°'            reduce using rule 48


State 86

	ListParam -> Param ',' ListParam .                  (rule 43)

	')'            reduce using rule 43


State 87

	Decl -> 'proc' BIdent '(' ListParam ')' 'is' . ListStmt 'end' BIdent    (rule 37)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 159

State 88

	Decl -> 'func' BIdent '(' ListParam ')' '->' . '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	'('            shift, and enter state 158


State 89

	Decl -> 'const' BIdent ':' Type BAss Expr . ';'     (rule 35)
	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)

	';'            shift, and enter state 157
	'if'           shift, and enter state 106


State 90

	Type -> 'Array' BLe Type BGr .                      (rule 126)
	Type -> 'Array' BLe Type BGr . '(' Expr ')'         (rule 127)

	'('            shift, and enter state 156
	')'            reduce using rule 126
	','            reduce using rule 126
	';'            reduce using rule 126
	L_BAss         reduce using rule 126
	L_BGr          reduce using rule 126


State 91

	BGr -> L_BGr .                                      (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	'++'           reduce using rule 18
	','            reduce using rule 18
	'--'           reduce using rule 18
	';'            reduce using rule 18
	'create'       reduce using rule 18
	'§'            reduce using rule 18
	'°'            reduce using rule 18
	L_BAss         reduce using rule 18
	L_BPlus        reduce using rule 18
	L_BMinus       reduce using rule 18
	L_BNot         reduce using rule 18
	L_BLBra        reduce using rule 18
	L_BGr          reduce using rule 18
	L_BBool        reduce using rule 18
	L_BIdent       reduce using rule 18
	L_BInteger     reduce using rule 18
	L_BReal        reduce using rule 18
	L_BChar        reduce using rule 18
	L_BString      reduce using rule 18


State 92

	LeftExpr1 -> BIdent .                               (rule 112)

	')'            reduce using rule 112
	'++'           reduce using rule 112
	','            reduce using rule 112
	'--'           reduce using rule 112
	'->'           reduce using rule 112
	';'            reduce using rule 112
	'<-'           reduce using rule 112
	']'            reduce using rule 112
	'else'         reduce using rule 112
	'if'           reduce using rule 112
	'of'           reduce using rule 112
	'then'         reduce using rule 112
	L_BAss         reduce using rule 112
	L_BPlus        reduce using rule 112
	L_BMinus       reduce using rule 112
	L_BDiv         reduce using rule 112
	L_BMul         reduce using rule 112
	L_BUpTo        reduce using rule 112
	L_BMod         reduce using rule 112
	L_BAnd         reduce using rule 112
	L_BOr          reduce using rule 112
	L_BLBra        reduce using rule 112
	L_BLe          reduce using rule 112
	L_BLeEq        reduce using rule 112
	L_BGr          reduce using rule 112
	L_BGrEq        reduce using rule 112
	L_BNotEq       reduce using rule 112
	L_BEq          reduce using rule 112


State 93

	LeftExpr -> '°' LeftExpr .                          (rule 115)

	')'            reduce using rule 115
	'++'           reduce using rule 115
	','            reduce using rule 115
	'--'           reduce using rule 115
	'->'           reduce using rule 115
	';'            reduce using rule 115
	'<-'           reduce using rule 115
	']'            reduce using rule 115
	'else'         reduce using rule 115
	'if'           reduce using rule 115
	'of'           reduce using rule 115
	'then'         reduce using rule 115
	L_BAss         reduce using rule 115
	L_BPlus        reduce using rule 115
	L_BMinus       reduce using rule 115
	L_BDiv         reduce using rule 115
	L_BMul         reduce using rule 115
	L_BUpTo        reduce using rule 115
	L_BMod         reduce using rule 115
	L_BAnd         reduce using rule 115
	L_BOr          reduce using rule 115
	L_BLe          reduce using rule 115
	L_BLeEq        reduce using rule 115
	L_BGr          reduce using rule 115
	L_BGrEq        reduce using rule 115
	L_BNotEq       reduce using rule 115
	L_BEq          reduce using rule 115


State 94

	LeftExpr1 -> '(' . LeftExpr ')'                     (rule 114)

	'('            shift, and enter state 94
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'°'            shift, and enter state 65
	L_BIdent       shift, and enter state 10

	BIdent         goto state 92
	LeftExpr1      goto state 57
	LeftExpr       goto state 155

State 95

	Expr7 -> '§' LeftExpr .                             (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	'->'           reduce using rule 52
	';'            reduce using rule 52
	'<-'           reduce using rule 52
	']'            reduce using rule 52
	'else'         reduce using rule 52
	'if'           reduce using rule 52
	'of'           reduce using rule 52
	'then'         reduce using rule 52
	L_BPlus        reduce using rule 52
	L_BMinus       reduce using rule 52
	L_BDiv         reduce using rule 52
	L_BMul         reduce using rule 52
	L_BUpTo        reduce using rule 52
	L_BMod         reduce using rule 52
	L_BAnd         reduce using rule 52
	L_BOr          reduce using rule 52
	L_BLe          reduce using rule 52
	L_BLeEq        reduce using rule 52
	L_BGr          reduce using rule 52
	L_BGrEq        reduce using rule 52
	L_BNotEq       reduce using rule 52
	L_BEq          reduce using rule 52


State 96

	Expr7 -> 'create' 'Array' . BLe Type BGr '(' Expr ')'    (rule 51)

	L_BLe          shift, and enter state 34

	BLe            goto state 154

State 97

	LeftExpr -> '--' LeftExpr .                         (rule 117)

	')'            reduce using rule 117
	'++'           reduce using rule 117
	','            reduce using rule 117
	'--'           reduce using rule 117
	'->'           reduce using rule 117
	';'            reduce using rule 117
	'<-'           reduce using rule 117
	']'            reduce using rule 117
	'else'         reduce using rule 117
	'if'           reduce using rule 117
	'of'           reduce using rule 117
	'then'         reduce using rule 117
	L_BAss         reduce using rule 117
	L_BPlus        reduce using rule 117
	L_BMinus       reduce using rule 117
	L_BDiv         reduce using rule 117
	L_BMul         reduce using rule 117
	L_BUpTo        reduce using rule 117
	L_BMod         reduce using rule 117
	L_BAnd         reduce using rule 117
	L_BOr          reduce using rule 117
	L_BLe          reduce using rule 117
	L_BLeEq        reduce using rule 117
	L_BGr          reduce using rule 117
	L_BGrEq        reduce using rule 117
	L_BNotEq       reduce using rule 117
	L_BEq          reduce using rule 117


State 98

	LeftExpr -> '++' LeftExpr .                         (rule 116)

	')'            reduce using rule 116
	'++'           reduce using rule 116
	','            reduce using rule 116
	'--'           reduce using rule 116
	'->'           reduce using rule 116
	';'            reduce using rule 116
	'<-'           reduce using rule 116
	']'            reduce using rule 116
	'else'         reduce using rule 116
	'if'           reduce using rule 116
	'of'           reduce using rule 116
	'then'         reduce using rule 116
	L_BAss         reduce using rule 116
	L_BPlus        reduce using rule 116
	L_BMinus       reduce using rule 116
	L_BDiv         reduce using rule 116
	L_BMul         reduce using rule 116
	L_BUpTo        reduce using rule 116
	L_BMod         reduce using rule 116
	L_BAnd         reduce using rule 116
	L_BOr          reduce using rule 116
	L_BLe          reduce using rule 116
	L_BLeEq        reduce using rule 116
	L_BGr          reduce using rule 116
	L_BGrEq        reduce using rule 116
	L_BNotEq       reduce using rule 116
	L_BEq          reduce using rule 116


State 99

	Expr6 -> '(' Expr . ')'                             (rule 55)
	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)

	')'            shift, and enter state 153
	'if'           shift, and enter state 106


State 100

	Expr7 -> LeftExpr .                                 (rule 53)
	Expr6 -> LeftExpr . '++'                            (rule 56)
	Expr6 -> LeftExpr . '--'                            (rule 57)
	LeftExpr1 -> '(' LeftExpr . ')'                     (rule 114)

	')'            shift, and enter state 152
			(reduce using rule 53)

	'++'           shift, and enter state 101
	'--'           shift, and enter state 102
	'if'           reduce using rule 53
	L_BPlus        reduce using rule 53
	L_BMinus       reduce using rule 53
	L_BDiv         reduce using rule 53
	L_BMul         reduce using rule 53
	L_BUpTo        reduce using rule 53
	L_BMod         reduce using rule 53
	L_BAnd         reduce using rule 53
	L_BOr          reduce using rule 53
	L_BLe          reduce using rule 53
	L_BLeEq        reduce using rule 53
	L_BGr          reduce using rule 53
	L_BGrEq        reduce using rule 53
	L_BNotEq       reduce using rule 53
	L_BEq          reduce using rule 53


State 101

	Expr6 -> LeftExpr '++' .                            (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	'->'           reduce using rule 56
	';'            reduce using rule 56
	'<-'           reduce using rule 56
	']'            reduce using rule 56
	'else'         reduce using rule 56
	'if'           reduce using rule 56
	'of'           reduce using rule 56
	'then'         reduce using rule 56
	L_BPlus        reduce using rule 56
	L_BMinus       reduce using rule 56
	L_BDiv         reduce using rule 56
	L_BMul         reduce using rule 56
	L_BUpTo        reduce using rule 56
	L_BMod         reduce using rule 56
	L_BAnd         reduce using rule 56
	L_BOr          reduce using rule 56
	L_BLe          reduce using rule 56
	L_BLeEq        reduce using rule 56
	L_BGr          reduce using rule 56
	L_BGrEq        reduce using rule 56
	L_BNotEq       reduce using rule 56
	L_BEq          reduce using rule 56


State 102

	Expr6 -> LeftExpr '--' .                            (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	'->'           reduce using rule 57
	';'            reduce using rule 57
	'<-'           reduce using rule 57
	']'            reduce using rule 57
	'else'         reduce using rule 57
	'if'           reduce using rule 57
	'of'           reduce using rule 57
	'then'         reduce using rule 57
	L_BPlus        reduce using rule 57
	L_BMinus       reduce using rule 57
	L_BDiv         reduce using rule 57
	L_BMul         reduce using rule 57
	L_BUpTo        reduce using rule 57
	L_BMod         reduce using rule 57
	L_BAnd         reduce using rule 57
	L_BOr          reduce using rule 57
	L_BLe          reduce using rule 57
	L_BLeEq        reduce using rule 57
	L_BGr          reduce using rule 57
	L_BGrEq        reduce using rule 57
	L_BNotEq       reduce using rule 57
	L_BEq          reduce using rule 57


State 103

	Dim -> BLBra . Expr ']'                             (rule 119)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 151
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 104

	LeftExpr1 -> LeftExpr1 Dim .                        (rule 113)

	')'            reduce using rule 113
	'++'           reduce using rule 113
	','            reduce using rule 113
	'--'           reduce using rule 113
	'->'           reduce using rule 113
	';'            reduce using rule 113
	'<-'           reduce using rule 113
	']'            reduce using rule 113
	'else'         reduce using rule 113
	'if'           reduce using rule 113
	'of'           reduce using rule 113
	'then'         reduce using rule 113
	L_BAss         reduce using rule 113
	L_BPlus        reduce using rule 113
	L_BMinus       reduce using rule 113
	L_BDiv         reduce using rule 113
	L_BMul         reduce using rule 113
	L_BUpTo        reduce using rule 113
	L_BMod         reduce using rule 113
	L_BAnd         reduce using rule 113
	L_BOr          reduce using rule 113
	L_BLBra        reduce using rule 113
	L_BLe          reduce using rule 113
	L_BLeEq        reduce using rule 113
	L_BGr          reduce using rule 113
	L_BGrEq        reduce using rule 113
	L_BNotEq       reduce using rule 113
	L_BEq          reduce using rule 113


State 105

	Decl -> BIdent ':' Type BAss Expr ';' .             (rule 34)

	'('            reduce using rule 34
	'++'           reduce using rule 34
	'--'           reduce using rule 34
	'const'        reduce using rule 34
	'create'       reduce using rule 34
	'else'         reduce using rule 34
	'elseif'       reduce using rule 34
	'end'          reduce using rule 34
	'for'          reduce using rule 34
	'func'         reduce using rule 34
	'if'           reduce using rule 34
	'local'        reduce using rule 34
	'proc'         reduce using rule 34
	'§'            reduce using rule 34
	'°'            reduce using rule 34
	L_BTry         reduce using rule 34
	L_BCatch       reduce using rule 34
	L_BLoop        reduce using rule 34
	L_BCase        reduce using rule 34
	L_BPlus        reduce using rule 34
	L_BMinus       reduce using rule 34
	L_BNot         reduce using rule 34
	L_BLBra        reduce using rule 34
	L_BBool        reduce using rule 34
	L_BReturn      reduce using rule 34
	L_BExit        reduce using rule 34
	L_BContinue    reduce using rule 34
	L_BExitOn      reduce using rule 34
	L_BIdent       reduce using rule 34
	L_BInteger     reduce using rule 34
	L_BReal        reduce using rule 34
	L_BChar        reduce using rule 34
	L_BString      reduce using rule 34
	%eof           reduce using rule 34


State 106

	Expr -> Expr 'if' . Expr 'else' Expr                (rule 76)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 150
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 107

	Expr0 -> Expr0 BOr . Expr1                          (rule 73)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 149
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 108

	Rel -> BLe .                                        (rule 82)

	'('            reduce using rule 82
	'++'           reduce using rule 82
	'--'           reduce using rule 82
	'create'       reduce using rule 82
	'§'            reduce using rule 82
	'°'            reduce using rule 82
	L_BPlus        reduce using rule 82
	L_BMinus       reduce using rule 82
	L_BNot         reduce using rule 82
	L_BLBra        reduce using rule 82
	L_BBool        reduce using rule 82
	L_BIdent       reduce using rule 82
	L_BInteger     reduce using rule 82
	L_BReal        reduce using rule 82
	L_BChar        reduce using rule 82
	L_BString      reduce using rule 82


State 109

	Rel -> BLeEq .                                      (rule 83)

	'('            reduce using rule 83
	'++'           reduce using rule 83
	'--'           reduce using rule 83
	'create'       reduce using rule 83
	'§'            reduce using rule 83
	'°'            reduce using rule 83
	L_BPlus        reduce using rule 83
	L_BMinus       reduce using rule 83
	L_BNot         reduce using rule 83
	L_BLBra        reduce using rule 83
	L_BBool        reduce using rule 83
	L_BIdent       reduce using rule 83
	L_BInteger     reduce using rule 83
	L_BReal        reduce using rule 83
	L_BChar        reduce using rule 83
	L_BString      reduce using rule 83


State 110

	Rel -> BGr .                                        (rule 84)

	'('            reduce using rule 84
	'++'           reduce using rule 84
	'--'           reduce using rule 84
	'create'       reduce using rule 84
	'§'            reduce using rule 84
	'°'            reduce using rule 84
	L_BPlus        reduce using rule 84
	L_BMinus       reduce using rule 84
	L_BNot         reduce using rule 84
	L_BLBra        reduce using rule 84
	L_BBool        reduce using rule 84
	L_BIdent       reduce using rule 84
	L_BInteger     reduce using rule 84
	L_BReal        reduce using rule 84
	L_BChar        reduce using rule 84
	L_BString      reduce using rule 84


State 111

	Rel -> BGrEq .                                      (rule 85)

	'('            reduce using rule 85
	'++'           reduce using rule 85
	'--'           reduce using rule 85
	'create'       reduce using rule 85
	'§'            reduce using rule 85
	'°'            reduce using rule 85
	L_BPlus        reduce using rule 85
	L_BMinus       reduce using rule 85
	L_BNot         reduce using rule 85
	L_BLBra        reduce using rule 85
	L_BBool        reduce using rule 85
	L_BIdent       reduce using rule 85
	L_BInteger     reduce using rule 85
	L_BReal        reduce using rule 85
	L_BChar        reduce using rule 85
	L_BString      reduce using rule 85


State 112

	Rel -> BNotEq .                                     (rule 86)

	'('            reduce using rule 86
	'++'           reduce using rule 86
	'--'           reduce using rule 86
	'create'       reduce using rule 86
	'§'            reduce using rule 86
	'°'            reduce using rule 86
	L_BPlus        reduce using rule 86
	L_BMinus       reduce using rule 86
	L_BNot         reduce using rule 86
	L_BLBra        reduce using rule 86
	L_BBool        reduce using rule 86
	L_BIdent       reduce using rule 86
	L_BInteger     reduce using rule 86
	L_BReal        reduce using rule 86
	L_BChar        reduce using rule 86
	L_BString      reduce using rule 86


State 113

	Rel -> BEq .                                        (rule 87)

	'('            reduce using rule 87
	'++'           reduce using rule 87
	'--'           reduce using rule 87
	'create'       reduce using rule 87
	'§'            reduce using rule 87
	'°'            reduce using rule 87
	L_BPlus        reduce using rule 87
	L_BMinus       reduce using rule 87
	L_BNot         reduce using rule 87
	L_BLBra        reduce using rule 87
	L_BBool        reduce using rule 87
	L_BIdent       reduce using rule 87
	L_BInteger     reduce using rule 87
	L_BReal        reduce using rule 87
	L_BChar        reduce using rule 87
	L_BString      reduce using rule 87


State 114

	Expr0 -> Expr0 Rel . Expr1                          (rule 74)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 148
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 115

	BOr -> L_BOr .                                      (rule 13)

	'('            reduce using rule 13
	'++'           reduce using rule 13
	'--'           reduce using rule 13
	'create'       reduce using rule 13
	'§'            reduce using rule 13
	'°'            reduce using rule 13
	L_BPlus        reduce using rule 13
	L_BMinus       reduce using rule 13
	L_BNot         reduce using rule 13
	L_BLBra        reduce using rule 13
	L_BBool        reduce using rule 13
	L_BIdent       reduce using rule 13
	L_BInteger     reduce using rule 13
	L_BReal        reduce using rule 13
	L_BChar        reduce using rule 13
	L_BString      reduce using rule 13


State 116

	BLeEq -> L_BLeEq .                                  (rule 17)

	'('            reduce using rule 17
	'++'           reduce using rule 17
	'--'           reduce using rule 17
	'create'       reduce using rule 17
	'§'            reduce using rule 17
	'°'            reduce using rule 17
	L_BPlus        reduce using rule 17
	L_BMinus       reduce using rule 17
	L_BNot         reduce using rule 17
	L_BLBra        reduce using rule 17
	L_BBool        reduce using rule 17
	L_BIdent       reduce using rule 17
	L_BInteger     reduce using rule 17
	L_BReal        reduce using rule 17
	L_BChar        reduce using rule 17
	L_BString      reduce using rule 17


State 117

	BGrEq -> L_BGrEq .                                  (rule 19)

	'('            reduce using rule 19
	'++'           reduce using rule 19
	'--'           reduce using rule 19
	'create'       reduce using rule 19
	'§'            reduce using rule 19
	'°'            reduce using rule 19
	L_BPlus        reduce using rule 19
	L_BMinus       reduce using rule 19
	L_BNot         reduce using rule 19
	L_BLBra        reduce using rule 19
	L_BBool        reduce using rule 19
	L_BIdent       reduce using rule 19
	L_BInteger     reduce using rule 19
	L_BReal        reduce using rule 19
	L_BChar        reduce using rule 19
	L_BString      reduce using rule 19


State 118

	BNotEq -> L_BNotEq .                                (rule 20)

	'('            reduce using rule 20
	'++'           reduce using rule 20
	'--'           reduce using rule 20
	'create'       reduce using rule 20
	'§'            reduce using rule 20
	'°'            reduce using rule 20
	L_BPlus        reduce using rule 20
	L_BMinus       reduce using rule 20
	L_BNot         reduce using rule 20
	L_BLBra        reduce using rule 20
	L_BBool        reduce using rule 20
	L_BIdent       reduce using rule 20
	L_BInteger     reduce using rule 20
	L_BReal        reduce using rule 20
	L_BChar        reduce using rule 20
	L_BString      reduce using rule 20


State 119

	BEq -> L_BEq .                                      (rule 21)

	'('            reduce using rule 21
	'++'           reduce using rule 21
	'--'           reduce using rule 21
	'create'       reduce using rule 21
	'§'            reduce using rule 21
	'°'            reduce using rule 21
	L_BPlus        reduce using rule 21
	L_BMinus       reduce using rule 21
	L_BNot         reduce using rule 21
	L_BLBra        reduce using rule 21
	L_BBool        reduce using rule 21
	L_BIdent       reduce using rule 21
	L_BInteger     reduce using rule 21
	L_BReal        reduce using rule 21
	L_BChar        reduce using rule 21
	L_BString      reduce using rule 21


State 120

	Expr1 -> Expr1 BAnd . Expr2                         (rule 71)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 147
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 121

	BAnd -> L_BAnd .                                    (rule 12)

	'('            reduce using rule 12
	'++'           reduce using rule 12
	'--'           reduce using rule 12
	'create'       reduce using rule 12
	'§'            reduce using rule 12
	'°'            reduce using rule 12
	L_BPlus        reduce using rule 12
	L_BMinus       reduce using rule 12
	L_BNot         reduce using rule 12
	L_BLBra        reduce using rule 12
	L_BBool        reduce using rule 12
	L_BIdent       reduce using rule 12
	L_BInteger     reduce using rule 12
	L_BReal        reduce using rule 12
	L_BChar        reduce using rule 12
	L_BString      reduce using rule 12


State 122

	Expr2 -> Expr2 BPlus . Expr3                        (rule 67)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 146
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 123

	Expr2 -> Expr2 BMinus . Expr3                       (rule 68)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 145
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 124

	Expr3 -> Expr3 BDiv . Expr4                         (rule 63)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 144
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 125

	Expr3 -> Expr3 BMul . Expr4                         (rule 61)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 143
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 126

	Expr3 -> Expr3 BMod . Expr4                         (rule 62)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 142
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 127

	BDiv -> L_BDiv .                                    (rule 8)

	'('            reduce using rule 8
	'++'           reduce using rule 8
	'--'           reduce using rule 8
	'create'       reduce using rule 8
	'§'            reduce using rule 8
	'°'            reduce using rule 8
	L_BLBra        reduce using rule 8
	L_BBool        reduce using rule 8
	L_BIdent       reduce using rule 8
	L_BInteger     reduce using rule 8
	L_BReal        reduce using rule 8
	L_BChar        reduce using rule 8
	L_BString      reduce using rule 8


State 128

	BMul -> L_BMul .                                    (rule 9)

	'('            reduce using rule 9
	'++'           reduce using rule 9
	'--'           reduce using rule 9
	'create'       reduce using rule 9
	'§'            reduce using rule 9
	'°'            reduce using rule 9
	L_BLBra        reduce using rule 9
	L_BBool        reduce using rule 9
	L_BIdent       reduce using rule 9
	L_BInteger     reduce using rule 9
	L_BReal        reduce using rule 9
	L_BChar        reduce using rule 9
	L_BString      reduce using rule 9


State 129

	BMod -> L_BMod .                                    (rule 11)

	'('            reduce using rule 11
	'++'           reduce using rule 11
	'--'           reduce using rule 11
	'create'       reduce using rule 11
	'§'            reduce using rule 11
	'°'            reduce using rule 11
	L_BLBra        reduce using rule 11
	L_BBool        reduce using rule 11
	L_BIdent       reduce using rule 11
	L_BInteger     reduce using rule 11
	L_BReal        reduce using rule 11
	L_BChar        reduce using rule 11
	L_BString      reduce using rule 11


State 130

	Expr5 -> Expr5 BUpTo . Expr6                        (rule 59)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 141
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 131

	BUpTo -> L_BUpTo .                                  (rule 10)

	'('            reduce using rule 10
	'++'           reduce using rule 10
	'--'           reduce using rule 10
	'create'       reduce using rule 10
	'§'            reduce using rule 10
	'°'            reduce using rule 10
	L_BLBra        reduce using rule 10
	L_BBool        reduce using rule 10
	L_BIdent       reduce using rule 10
	L_BInteger     reduce using rule 10
	L_BReal        reduce using rule 10
	L_BChar        reduce using rule 10
	L_BString      reduce using rule 10


State 132

	Expr6 -> BIdent '(' . ListExpr ')'                  (rule 54)

	'('            shift, and enter state 60
	')'            reduce using rule 79
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 133
	Expr4          goto state 56
	ListExpr       goto state 140
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 133

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	ListExpr -> Expr .                                  (rule 80)
	ListExpr -> Expr . ',' ListExpr                     (rule 81)

	')'            reduce using rule 80
	','            shift, and enter state 139
	']'            reduce using rule 80
	'if'           shift, and enter state 106


State 134

	Expr7 -> BLBra ListExpr . ']'                       (rule 50)

	']'            shift, and enter state 138


State 135

	Expr3 -> Expr3 . BMul Expr4                         (rule 61)
	Expr3 -> Expr3 . BMod Expr4                         (rule 62)
	Expr3 -> Expr3 . BDiv Expr4                         (rule 63)
	Expr2 -> BNot Expr3 .                               (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	'->'           reduce using rule 69
	';'            reduce using rule 69
	'<-'           reduce using rule 69
	']'            reduce using rule 69
	'else'         reduce using rule 69
	'if'           reduce using rule 69
	'of'           reduce using rule 69
	'then'         reduce using rule 69
	L_BPlus        reduce using rule 69
	L_BMinus       reduce using rule 69
	L_BDiv         shift, and enter state 127
	L_BMul         shift, and enter state 128
	L_BMod         shift, and enter state 129
	L_BAnd         reduce using rule 69
	L_BOr          reduce using rule 69
	L_BLe          reduce using rule 69
	L_BLeEq        reduce using rule 69
	L_BGr          reduce using rule 69
	L_BGrEq        reduce using rule 69
	L_BNotEq       reduce using rule 69
	L_BEq          reduce using rule 69

	BDiv           goto state 124
	BMul           goto state 125
	BMod           goto state 126

State 136

	Expr5 -> Expr5 . BUpTo Expr6                        (rule 59)
	Expr3 -> BMinus Expr5 .                             (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'<-'           reduce using rule 64
	']'            reduce using rule 64
	'else'         reduce using rule 64
	'if'           reduce using rule 64
	'of'           reduce using rule 64
	'then'         reduce using rule 64
	L_BPlus        reduce using rule 64
	L_BMinus       reduce using rule 64
	L_BDiv         reduce using rule 64
	L_BMul         reduce using rule 64
	L_BUpTo        shift, and enter state 131
	L_BMod         reduce using rule 64
	L_BAnd         reduce using rule 64
	L_BOr          reduce using rule 64
	L_BLe          reduce using rule 64
	L_BLeEq        reduce using rule 64
	L_BGr          reduce using rule 64
	L_BGrEq        reduce using rule 64
	L_BNotEq       reduce using rule 64
	L_BEq          reduce using rule 64

	BUpTo          goto state 130

State 137

	Expr5 -> Expr5 . BUpTo Expr6                        (rule 59)
	Expr3 -> BPlus Expr5 .                              (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	';'            reduce using rule 65
	'<-'           reduce using rule 65
	']'            reduce using rule 65
	'else'         reduce using rule 65
	'if'           reduce using rule 65
	'of'           reduce using rule 65
	'then'         reduce using rule 65
	L_BPlus        reduce using rule 65
	L_BMinus       reduce using rule 65
	L_BDiv         reduce using rule 65
	L_BMul         reduce using rule 65
	L_BUpTo        shift, and enter state 131
	L_BMod         reduce using rule 65
	L_BAnd         reduce using rule 65
	L_BOr          reduce using rule 65
	L_BLe          reduce using rule 65
	L_BLeEq        reduce using rule 65
	L_BGr          reduce using rule 65
	L_BGrEq        reduce using rule 65
	L_BNotEq       reduce using rule 65
	L_BEq          reduce using rule 65

	BUpTo          goto state 130

State 138

	Expr7 -> BLBra ListExpr ']' .                       (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	'->'           reduce using rule 50
	';'            reduce using rule 50
	'<-'           reduce using rule 50
	']'            reduce using rule 50
	'else'         reduce using rule 50
	'if'           reduce using rule 50
	'of'           reduce using rule 50
	'then'         reduce using rule 50
	L_BPlus        reduce using rule 50
	L_BMinus       reduce using rule 50
	L_BDiv         reduce using rule 50
	L_BMul         reduce using rule 50
	L_BUpTo        reduce using rule 50
	L_BMod         reduce using rule 50
	L_BAnd         reduce using rule 50
	L_BOr          reduce using rule 50
	L_BLe          reduce using rule 50
	L_BLeEq        reduce using rule 50
	L_BGr          reduce using rule 50
	L_BGrEq        reduce using rule 50
	L_BNotEq       reduce using rule 50
	L_BEq          reduce using rule 50


State 139

	ListExpr -> Expr ',' . ListExpr                     (rule 81)

	'('            shift, and enter state 60
	')'            reduce using rule 79
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	']'            reduce using rule 79
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 133
	Expr4          goto state 56
	ListExpr       goto state 190
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 140

	Expr6 -> BIdent '(' ListExpr . ')'                  (rule 54)

	')'            shift, and enter state 189


State 141

	Expr5 -> Expr5 BUpTo Expr6 .                        (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	'->'           reduce using rule 59
	';'            reduce using rule 59
	'<-'           reduce using rule 59
	']'            reduce using rule 59
	'else'         reduce using rule 59
	'if'           reduce using rule 59
	'of'           reduce using rule 59
	'then'         reduce using rule 59
	L_BPlus        reduce using rule 59
	L_BMinus       reduce using rule 59
	L_BDiv         reduce using rule 59
	L_BMul         reduce using rule 59
	L_BUpTo        reduce using rule 59
	L_BMod         reduce using rule 59
	L_BAnd         reduce using rule 59
	L_BOr          reduce using rule 59
	L_BLe          reduce using rule 59
	L_BLeEq        reduce using rule 59
	L_BGr          reduce using rule 59
	L_BGrEq        reduce using rule 59
	L_BNotEq       reduce using rule 59
	L_BEq          reduce using rule 59


State 142

	Expr3 -> Expr3 BMod Expr4 .                         (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	';'            reduce using rule 62
	'<-'           reduce using rule 62
	']'            reduce using rule 62
	'else'         reduce using rule 62
	'if'           reduce using rule 62
	'of'           reduce using rule 62
	'then'         reduce using rule 62
	L_BPlus        reduce using rule 62
	L_BMinus       reduce using rule 62
	L_BDiv         reduce using rule 62
	L_BMul         reduce using rule 62
	L_BMod         reduce using rule 62
	L_BAnd         reduce using rule 62
	L_BOr          reduce using rule 62
	L_BLe          reduce using rule 62
	L_BLeEq        reduce using rule 62
	L_BGr          reduce using rule 62
	L_BGrEq        reduce using rule 62
	L_BNotEq       reduce using rule 62
	L_BEq          reduce using rule 62


State 143

	Expr3 -> Expr3 BMul Expr4 .                         (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	'->'           reduce using rule 61
	';'            reduce using rule 61
	'<-'           reduce using rule 61
	']'            reduce using rule 61
	'else'         reduce using rule 61
	'if'           reduce using rule 61
	'of'           reduce using rule 61
	'then'         reduce using rule 61
	L_BPlus        reduce using rule 61
	L_BMinus       reduce using rule 61
	L_BDiv         reduce using rule 61
	L_BMul         reduce using rule 61
	L_BMod         reduce using rule 61
	L_BAnd         reduce using rule 61
	L_BOr          reduce using rule 61
	L_BLe          reduce using rule 61
	L_BLeEq        reduce using rule 61
	L_BGr          reduce using rule 61
	L_BGrEq        reduce using rule 61
	L_BNotEq       reduce using rule 61
	L_BEq          reduce using rule 61


State 144

	Expr3 -> Expr3 BDiv Expr4 .                         (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	'->'           reduce using rule 63
	';'            reduce using rule 63
	'<-'           reduce using rule 63
	']'            reduce using rule 63
	'else'         reduce using rule 63
	'if'           reduce using rule 63
	'of'           reduce using rule 63
	'then'         reduce using rule 63
	L_BPlus        reduce using rule 63
	L_BMinus       reduce using rule 63
	L_BDiv         reduce using rule 63
	L_BMul         reduce using rule 63
	L_BMod         reduce using rule 63
	L_BAnd         reduce using rule 63
	L_BOr          reduce using rule 63
	L_BLe          reduce using rule 63
	L_BLeEq        reduce using rule 63
	L_BGr          reduce using rule 63
	L_BGrEq        reduce using rule 63
	L_BNotEq       reduce using rule 63
	L_BEq          reduce using rule 63


State 145

	Expr3 -> Expr3 . BMul Expr4                         (rule 61)
	Expr3 -> Expr3 . BMod Expr4                         (rule 62)
	Expr3 -> Expr3 . BDiv Expr4                         (rule 63)
	Expr2 -> Expr2 BMinus Expr3 .                       (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	'->'           reduce using rule 68
	';'            reduce using rule 68
	'<-'           reduce using rule 68
	']'            reduce using rule 68
	'else'         reduce using rule 68
	'if'           reduce using rule 68
	'of'           reduce using rule 68
	'then'         reduce using rule 68
	L_BPlus        reduce using rule 68
	L_BMinus       reduce using rule 68
	L_BDiv         shift, and enter state 127
	L_BMul         shift, and enter state 128
	L_BMod         shift, and enter state 129
	L_BAnd         reduce using rule 68
	L_BOr          reduce using rule 68
	L_BLe          reduce using rule 68
	L_BLeEq        reduce using rule 68
	L_BGr          reduce using rule 68
	L_BGrEq        reduce using rule 68
	L_BNotEq       reduce using rule 68
	L_BEq          reduce using rule 68

	BDiv           goto state 124
	BMul           goto state 125
	BMod           goto state 126

State 146

	Expr3 -> Expr3 . BMul Expr4                         (rule 61)
	Expr3 -> Expr3 . BMod Expr4                         (rule 62)
	Expr3 -> Expr3 . BDiv Expr4                         (rule 63)
	Expr2 -> Expr2 BPlus Expr3 .                        (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	'->'           reduce using rule 67
	';'            reduce using rule 67
	'<-'           reduce using rule 67
	']'            reduce using rule 67
	'else'         reduce using rule 67
	'if'           reduce using rule 67
	'of'           reduce using rule 67
	'then'         reduce using rule 67
	L_BPlus        reduce using rule 67
	L_BMinus       reduce using rule 67
	L_BDiv         shift, and enter state 127
	L_BMul         shift, and enter state 128
	L_BMod         shift, and enter state 129
	L_BAnd         reduce using rule 67
	L_BOr          reduce using rule 67
	L_BLe          reduce using rule 67
	L_BLeEq        reduce using rule 67
	L_BGr          reduce using rule 67
	L_BGrEq        reduce using rule 67
	L_BNotEq       reduce using rule 67
	L_BEq          reduce using rule 67

	BDiv           goto state 124
	BMul           goto state 125
	BMod           goto state 126

State 147

	Expr2 -> Expr2 . BPlus Expr3                        (rule 67)
	Expr2 -> Expr2 . BMinus Expr3                       (rule 68)
	Expr1 -> Expr1 BAnd Expr2 .                         (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	'->'           reduce using rule 71
	';'            reduce using rule 71
	'<-'           reduce using rule 71
	']'            reduce using rule 71
	'else'         reduce using rule 71
	'if'           reduce using rule 71
	'of'           reduce using rule 71
	'then'         reduce using rule 71
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BAnd         reduce using rule 71
	L_BOr          reduce using rule 71
	L_BLe          reduce using rule 71
	L_BLeEq        reduce using rule 71
	L_BGr          reduce using rule 71
	L_BGrEq        reduce using rule 71
	L_BNotEq       reduce using rule 71
	L_BEq          reduce using rule 71

	BPlus          goto state 122
	BMinus         goto state 123

State 148

	Expr1 -> Expr1 . BAnd Expr2                         (rule 71)
	Expr0 -> Expr0 Rel Expr1 .                          (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	'->'           reduce using rule 74
	';'            reduce using rule 74
	'<-'           reduce using rule 74
	']'            reduce using rule 74
	'else'         reduce using rule 74
	'if'           reduce using rule 74
	'of'           reduce using rule 74
	'then'         reduce using rule 74
	L_BAnd         shift, and enter state 121
	L_BOr          reduce using rule 74
	L_BLe          reduce using rule 74
	L_BLeEq        reduce using rule 74
	L_BGr          reduce using rule 74
	L_BGrEq        reduce using rule 74
	L_BNotEq       reduce using rule 74
	L_BEq          reduce using rule 74

	BAnd           goto state 120

State 149

	Expr1 -> Expr1 . BAnd Expr2                         (rule 71)
	Expr0 -> Expr0 BOr Expr1 .                          (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	'->'           reduce using rule 73
	';'            reduce using rule 73
	'<-'           reduce using rule 73
	']'            reduce using rule 73
	'else'         reduce using rule 73
	'if'           reduce using rule 73
	'of'           reduce using rule 73
	'then'         reduce using rule 73
	L_BAnd         shift, and enter state 121
	L_BOr          reduce using rule 73
	L_BLe          reduce using rule 73
	L_BLeEq        reduce using rule 73
	L_BGr          reduce using rule 73
	L_BGrEq        reduce using rule 73
	L_BNotEq       reduce using rule 73
	L_BEq          reduce using rule 73

	BAnd           goto state 120

State 150

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Expr -> Expr 'if' Expr . 'else' Expr                (rule 76)

	'else'         shift, and enter state 188
	'if'           shift, and enter state 106


State 151

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Dim -> BLBra Expr . ']'                             (rule 119)

	']'            shift, and enter state 187
	'if'           shift, and enter state 106


State 152

	LeftExpr1 -> '(' LeftExpr ')' .                     (rule 114)

	')'            reduce using rule 114
	'++'           reduce using rule 114
	','            reduce using rule 114
	'--'           reduce using rule 114
	'->'           reduce using rule 114
	';'            reduce using rule 114
	'<-'           reduce using rule 114
	']'            reduce using rule 114
	'else'         reduce using rule 114
	'if'           reduce using rule 114
	'of'           reduce using rule 114
	'then'         reduce using rule 114
	L_BAss         reduce using rule 114
	L_BPlus        reduce using rule 114
	L_BMinus       reduce using rule 114
	L_BDiv         reduce using rule 114
	L_BMul         reduce using rule 114
	L_BUpTo        reduce using rule 114
	L_BMod         reduce using rule 114
	L_BAnd         reduce using rule 114
	L_BOr          reduce using rule 114
	L_BLBra        reduce using rule 114
	L_BLe          reduce using rule 114
	L_BLeEq        reduce using rule 114
	L_BGr          reduce using rule 114
	L_BGrEq        reduce using rule 114
	L_BNotEq       reduce using rule 114
	L_BEq          reduce using rule 114


State 153

	Expr6 -> '(' Expr ')' .                             (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	'->'           reduce using rule 55
	';'            reduce using rule 55
	'<-'           reduce using rule 55
	']'            reduce using rule 55
	'else'         reduce using rule 55
	'if'           reduce using rule 55
	'of'           reduce using rule 55
	'then'         reduce using rule 55
	L_BPlus        reduce using rule 55
	L_BMinus       reduce using rule 55
	L_BDiv         reduce using rule 55
	L_BMul         reduce using rule 55
	L_BUpTo        reduce using rule 55
	L_BMod         reduce using rule 55
	L_BAnd         reduce using rule 55
	L_BOr          reduce using rule 55
	L_BLe          reduce using rule 55
	L_BLeEq        reduce using rule 55
	L_BGr          reduce using rule 55
	L_BGrEq        reduce using rule 55
	L_BNotEq       reduce using rule 55
	L_BEq          reduce using rule 55


State 154

	Expr7 -> 'create' 'Array' BLe . Type BGr '(' Expr ')'    (rule 51)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 186
	BType          goto state 16

State 155

	LeftExpr1 -> '(' LeftExpr . ')'                     (rule 114)

	')'            shift, and enter state 152


State 156

	Type -> 'Array' BLe Type BGr '(' . Expr ')'         (rule 127)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 185
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 157

	Decl -> 'const' BIdent ':' Type BAss Expr ';' .     (rule 35)

	'('            reduce using rule 35
	'++'           reduce using rule 35
	'--'           reduce using rule 35
	'const'        reduce using rule 35
	'create'       reduce using rule 35
	'else'         reduce using rule 35
	'elseif'       reduce using rule 35
	'end'          reduce using rule 35
	'for'          reduce using rule 35
	'func'         reduce using rule 35
	'if'           reduce using rule 35
	'local'        reduce using rule 35
	'proc'         reduce using rule 35
	'§'            reduce using rule 35
	'°'            reduce using rule 35
	L_BTry         reduce using rule 35
	L_BCatch       reduce using rule 35
	L_BLoop        reduce using rule 35
	L_BCase        reduce using rule 35
	L_BPlus        reduce using rule 35
	L_BMinus       reduce using rule 35
	L_BNot         reduce using rule 35
	L_BLBra        reduce using rule 35
	L_BBool        reduce using rule 35
	L_BReturn      reduce using rule 35
	L_BExit        reduce using rule 35
	L_BContinue    reduce using rule 35
	L_BExitOn      reduce using rule 35
	L_BIdent       reduce using rule 35
	L_BInteger     reduce using rule 35
	L_BReal        reduce using rule 35
	L_BChar        reduce using rule 35
	L_BString      reduce using rule 35
	%eof           reduce using rule 35


State 158

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' . BIdent ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 184

State 159

	Decl -> 'proc' BIdent '(' ListParam ')' 'is' ListStmt . 'end' BIdent    (rule 37)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          shift, and enter state 174
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 160

	Param -> BIdent ':' Mod Type .                      (rule 40)

	')'            reduce using rule 40
	','            reduce using rule 40


State 161

	Stmt -> BTry . ListStmt BCatch ListStmt 'end' BCatch    (rule 98)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BCatch       reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 206

State 162

	Stmt -> BLoop . ListStmt 'end' BLoop                (rule 90)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 205

State 163

	Stmt -> BCase . Expr 'of' Cases 'end' BCase         (rule 94)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 204
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 164

	Stmt -> BReturn . ';'                               (rule 93)

	';'            shift, and enter state 203


State 165

	LoopCmd -> BExit .                                  (rule 107)

	';'            reduce using rule 107


State 166

	LoopCmd -> BContinue .                              (rule 108)

	';'            reduce using rule 108


State 167

	LoopCmd -> BExitOn . Expr                           (rule 106)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 202
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 168

	Decl -> BIdent . ':' Type ';'                       (rule 33)
	Decl -> BIdent . ':' Type BAss Expr ';'             (rule 34)
	Expr6 -> BIdent . '(' ListExpr ')'                  (rule 54)
	LeftExpr1 -> BIdent .                               (rule 112)

	'('            shift, and enter state 132
	'++'           reduce using rule 112
	'--'           reduce using rule 112
	'->'           reduce using rule 112
	':'            shift, and enter state 14
	';'            reduce using rule 112
	'if'           reduce using rule 112
	L_BAss         reduce using rule 112
	L_BPlus        reduce using rule 112
	L_BMinus       reduce using rule 112
	L_BDiv         reduce using rule 112
	L_BMul         reduce using rule 112
	L_BUpTo        reduce using rule 112
	L_BMod         reduce using rule 112
	L_BAnd         reduce using rule 112
	L_BOr          reduce using rule 112
	L_BLBra        reduce using rule 112
	L_BLe          reduce using rule 112
	L_BLeEq        reduce using rule 112
	L_BGr          reduce using rule 112
	L_BGrEq        reduce using rule 112
	L_BNotEq       reduce using rule 112
	L_BEq          reduce using rule 112


State 169

	Stmt -> Decl .                                      (rule 96)

	'('            reduce using rule 96
	'++'           reduce using rule 96
	'--'           reduce using rule 96
	'const'        reduce using rule 96
	'create'       reduce using rule 96
	'else'         reduce using rule 96
	'elseif'       reduce using rule 96
	'end'          reduce using rule 96
	'for'          reduce using rule 96
	'func'         reduce using rule 96
	'if'           reduce using rule 96
	'local'        reduce using rule 96
	'proc'         reduce using rule 96
	'§'            reduce using rule 96
	'°'            reduce using rule 96
	L_BTry         reduce using rule 96
	L_BCatch       reduce using rule 96
	L_BLoop        reduce using rule 96
	L_BCase        reduce using rule 96
	L_BPlus        reduce using rule 96
	L_BMinus       reduce using rule 96
	L_BNot         reduce using rule 96
	L_BLBra        reduce using rule 96
	L_BBool        reduce using rule 96
	L_BReturn      reduce using rule 96
	L_BExit        reduce using rule 96
	L_BContinue    reduce using rule 96
	L_BExitOn      reduce using rule 96
	L_BIdent       reduce using rule 96
	L_BInteger     reduce using rule 96
	L_BReal        reduce using rule 96
	L_BChar        reduce using rule 96
	L_BString      reduce using rule 96


State 170

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> Expr . ';'                                  (rule 97)

	';'            shift, and enter state 201
	'if'           shift, and enter state 106


State 171

	ListStmt -> ListStmt Stmt .                         (rule 103)

	'('            reduce using rule 103
	'++'           reduce using rule 103
	'--'           reduce using rule 103
	'const'        reduce using rule 103
	'create'       reduce using rule 103
	'else'         reduce using rule 103
	'elseif'       reduce using rule 103
	'end'          reduce using rule 103
	'for'          reduce using rule 103
	'func'         reduce using rule 103
	'if'           reduce using rule 103
	'local'        reduce using rule 103
	'proc'         reduce using rule 103
	'§'            reduce using rule 103
	'°'            reduce using rule 103
	L_BTry         reduce using rule 103
	L_BCatch       reduce using rule 103
	L_BLoop        reduce using rule 103
	L_BCase        reduce using rule 103
	L_BPlus        reduce using rule 103
	L_BMinus       reduce using rule 103
	L_BNot         reduce using rule 103
	L_BLBra        reduce using rule 103
	L_BBool        reduce using rule 103
	L_BReturn      reduce using rule 103
	L_BExit        reduce using rule 103
	L_BContinue    reduce using rule 103
	L_BExitOn      reduce using rule 103
	L_BIdent       reduce using rule 103
	L_BInteger     reduce using rule 103
	L_BReal        reduce using rule 103
	L_BChar        reduce using rule 103
	L_BString      reduce using rule 103


State 172

	Stmt -> LoopCmd . ';'                               (rule 91)

	';'            shift, and enter state 200


State 173

	Expr7 -> LeftExpr .                                 (rule 53)
	Expr6 -> LeftExpr . '++'                            (rule 56)
	Expr6 -> LeftExpr . '--'                            (rule 57)
	Stmt -> LeftExpr . BAss Expr ';'                    (rule 88)

	'++'           shift, and enter state 101
	'--'           shift, and enter state 102
	'->'           reduce using rule 53
	';'            reduce using rule 53
	'if'           reduce using rule 53
	L_BAss         shift, and enter state 37
	L_BPlus        reduce using rule 53
	L_BMinus       reduce using rule 53
	L_BDiv         reduce using rule 53
	L_BMul         reduce using rule 53
	L_BUpTo        reduce using rule 53
	L_BMod         reduce using rule 53
	L_BAnd         reduce using rule 53
	L_BOr          reduce using rule 53
	L_BLe          reduce using rule 53
	L_BLeEq        reduce using rule 53
	L_BGr          reduce using rule 53
	L_BGrEq        reduce using rule 53
	L_BNotEq       reduce using rule 53
	L_BEq          reduce using rule 53

	BAss           goto state 199

State 174

	Decl -> 'proc' BIdent '(' ListParam ')' 'is' ListStmt 'end' . BIdent    (rule 37)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 198

State 175

	Stmt -> 'for' . '(' BIdent ':' BType BAss Expr Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	'('            shift, and enter state 197


State 176

	Stmt -> 'if' . Expr 'then' ListStmt ElseStmt 'end' 'if'    (rule 89)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 196
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 177

	Stmt -> 'local' . ListStmt 'end' 'local'            (rule 95)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 195

State 178

	BLoop -> L_BLoop .                                  (rule 3)

	'('            reduce using rule 3
	'++'           reduce using rule 3
	'--'           reduce using rule 3
	'const'        reduce using rule 3
	'create'       reduce using rule 3
	'else'         reduce using rule 3
	'elseif'       reduce using rule 3
	'end'          reduce using rule 3
	'for'          reduce using rule 3
	'func'         reduce using rule 3
	'if'           reduce using rule 3
	'local'        reduce using rule 3
	'proc'         reduce using rule 3
	'§'            reduce using rule 3
	'°'            reduce using rule 3
	L_BTry         reduce using rule 3
	L_BCatch       reduce using rule 3
	L_BLoop        reduce using rule 3
	L_BCase        reduce using rule 3
	L_BPlus        reduce using rule 3
	L_BMinus       reduce using rule 3
	L_BNot         reduce using rule 3
	L_BLBra        reduce using rule 3
	L_BBool        reduce using rule 3
	L_BReturn      reduce using rule 3
	L_BExit        reduce using rule 3
	L_BContinue    reduce using rule 3
	L_BExitOn      reduce using rule 3
	L_BIdent       reduce using rule 3
	L_BInteger     reduce using rule 3
	L_BReal        reduce using rule 3
	L_BChar        reduce using rule 3
	L_BString      reduce using rule 3


State 179

	BCase -> L_BCase .                                  (rule 4)

	'('            reduce using rule 4
	'++'           reduce using rule 4
	'--'           reduce using rule 4
	'const'        reduce using rule 4
	'create'       reduce using rule 4
	'else'         reduce using rule 4
	'elseif'       reduce using rule 4
	'end'          reduce using rule 4
	'for'          reduce using rule 4
	'func'         reduce using rule 4
	'if'           reduce using rule 4
	'local'        reduce using rule 4
	'proc'         reduce using rule 4
	'§'            reduce using rule 4
	'°'            reduce using rule 4
	L_BTry         reduce using rule 4
	L_BCatch       reduce using rule 4
	L_BLoop        reduce using rule 4
	L_BCase        reduce using rule 4
	L_BPlus        reduce using rule 4
	L_BMinus       reduce using rule 4
	L_BNot         reduce using rule 4
	L_BLBra        reduce using rule 4
	L_BBool        reduce using rule 4
	L_BReturn      reduce using rule 4
	L_BExit        reduce using rule 4
	L_BContinue    reduce using rule 4
	L_BExitOn      reduce using rule 4
	L_BIdent       reduce using rule 4
	L_BInteger     reduce using rule 4
	L_BReal        reduce using rule 4
	L_BChar        reduce using rule 4
	L_BString      reduce using rule 4


State 180

	BReturn -> L_BReturn .                              (rule 23)

	';'            reduce using rule 23


State 181

	BExit -> L_BExit .                                  (rule 24)

	';'            reduce using rule 24


State 182

	BContinue -> L_BContinue .                          (rule 25)

	';'            reduce using rule 25


State 183

	BExitOn -> L_BExitOn .                              (rule 26)

	'('            reduce using rule 26
	'++'           reduce using rule 26
	'--'           reduce using rule 26
	'create'       reduce using rule 26
	'§'            reduce using rule 26
	'°'            reduce using rule 26
	L_BPlus        reduce using rule 26
	L_BMinus       reduce using rule 26
	L_BNot         reduce using rule 26
	L_BLBra        reduce using rule 26
	L_BBool        reduce using rule 26
	L_BIdent       reduce using rule 26
	L_BInteger     reduce using rule 26
	L_BReal        reduce using rule 26
	L_BChar        reduce using rule 26
	L_BString      reduce using rule 26


State 184

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent . ':' Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	':'            shift, and enter state 194


State 185

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Type -> 'Array' BLe Type BGr '(' Expr . ')'         (rule 127)

	')'            shift, and enter state 193
	'if'           shift, and enter state 106


State 186

	Expr7 -> 'create' 'Array' BLe Type . BGr '(' Expr ')'    (rule 51)

	L_BGr          shift, and enter state 91

	BGr            goto state 192

State 187

	Dim -> BLBra Expr ']' .                             (rule 119)

	')'            reduce using rule 119
	'++'           reduce using rule 119
	','            reduce using rule 119
	'--'           reduce using rule 119
	'->'           reduce using rule 119
	';'            reduce using rule 119
	'<-'           reduce using rule 119
	']'            reduce using rule 119
	'else'         reduce using rule 119
	'if'           reduce using rule 119
	'of'           reduce using rule 119
	'then'         reduce using rule 119
	L_BAss         reduce using rule 119
	L_BPlus        reduce using rule 119
	L_BMinus       reduce using rule 119
	L_BDiv         reduce using rule 119
	L_BMul         reduce using rule 119
	L_BUpTo        reduce using rule 119
	L_BMod         reduce using rule 119
	L_BAnd         reduce using rule 119
	L_BOr          reduce using rule 119
	L_BLBra        reduce using rule 119
	L_BLe          reduce using rule 119
	L_BLeEq        reduce using rule 119
	L_BGr          reduce using rule 119
	L_BGrEq        reduce using rule 119
	L_BNotEq       reduce using rule 119
	L_BEq          reduce using rule 119


State 188

	Expr -> Expr 'if' Expr 'else' . Expr                (rule 76)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 191
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 189

	Expr6 -> BIdent '(' ListExpr ')' .                  (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	'->'           reduce using rule 54
	';'            reduce using rule 54
	'<-'           reduce using rule 54
	']'            reduce using rule 54
	'else'         reduce using rule 54
	'if'           reduce using rule 54
	'of'           reduce using rule 54
	'then'         reduce using rule 54
	L_BPlus        reduce using rule 54
	L_BMinus       reduce using rule 54
	L_BDiv         reduce using rule 54
	L_BMul         reduce using rule 54
	L_BUpTo        reduce using rule 54
	L_BMod         reduce using rule 54
	L_BAnd         reduce using rule 54
	L_BOr          reduce using rule 54
	L_BLe          reduce using rule 54
	L_BLeEq        reduce using rule 54
	L_BGr          reduce using rule 54
	L_BGrEq        reduce using rule 54
	L_BNotEq       reduce using rule 54
	L_BEq          reduce using rule 54


State 190

	ListExpr -> Expr ',' ListExpr .                     (rule 81)

	')'            reduce using rule 81
	']'            reduce using rule 81


State 191

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Expr -> Expr 'if' Expr 'else' Expr .                (rule 76)

	')'            reduce using rule 76
	','            reduce using rule 76
	'->'           reduce using rule 76
	';'            reduce using rule 76
	'<-'           reduce using rule 76
	']'            reduce using rule 76
	'else'         reduce using rule 76
	'if'           shift, and enter state 106
			(reduce using rule 76)

	'of'           reduce using rule 76
	'then'         reduce using rule 76


State 192

	Expr7 -> 'create' 'Array' BLe Type BGr . '(' Expr ')'    (rule 51)

	'('            shift, and enter state 216


State 193

	Type -> 'Array' BLe Type BGr '(' Expr ')' .         (rule 127)

	')'            reduce using rule 127
	','            reduce using rule 127
	';'            reduce using rule 127
	L_BAss         reduce using rule 127
	L_BGr          reduce using rule 127


State 194

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' . Type ')' 'is' ListStmt 'end' BIdent    (rule 36)

	'Array'        shift, and enter state 17
	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22
	'°'            shift, and enter state 23

	Type           goto state 215
	BType          goto state 16

State 195

	Stmt -> 'local' ListStmt . 'end' 'local'            (rule 95)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          shift, and enter state 214
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 196

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> 'if' Expr . 'then' ListStmt ElseStmt 'end' 'if'    (rule 89)

	'if'           shift, and enter state 106
	'then'         shift, and enter state 213


State 197

	Stmt -> 'for' '(' . BIdent ':' BType BAss Expr Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 212

State 198

	Decl -> 'proc' BIdent '(' ListParam ')' 'is' ListStmt 'end' BIdent .    (rule 37)

	'('            reduce using rule 37
	'++'           reduce using rule 37
	'--'           reduce using rule 37
	'const'        reduce using rule 37
	'create'       reduce using rule 37
	'else'         reduce using rule 37
	'elseif'       reduce using rule 37
	'end'          reduce using rule 37
	'for'          reduce using rule 37
	'func'         reduce using rule 37
	'if'           reduce using rule 37
	'local'        reduce using rule 37
	'proc'         reduce using rule 37
	'§'            reduce using rule 37
	'°'            reduce using rule 37
	L_BTry         reduce using rule 37
	L_BCatch       reduce using rule 37
	L_BLoop        reduce using rule 37
	L_BCase        reduce using rule 37
	L_BPlus        reduce using rule 37
	L_BMinus       reduce using rule 37
	L_BNot         reduce using rule 37
	L_BLBra        reduce using rule 37
	L_BBool        reduce using rule 37
	L_BReturn      reduce using rule 37
	L_BExit        reduce using rule 37
	L_BContinue    reduce using rule 37
	L_BExitOn      reduce using rule 37
	L_BIdent       reduce using rule 37
	L_BInteger     reduce using rule 37
	L_BReal        reduce using rule 37
	L_BChar        reduce using rule 37
	L_BString      reduce using rule 37
	%eof           reduce using rule 37


State 199

	Stmt -> LeftExpr BAss . Expr ';'                    (rule 88)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 211
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 200

	Stmt -> LoopCmd ';' .                               (rule 91)

	'('            reduce using rule 91
	'++'           reduce using rule 91
	'--'           reduce using rule 91
	'const'        reduce using rule 91
	'create'       reduce using rule 91
	'else'         reduce using rule 91
	'elseif'       reduce using rule 91
	'end'          reduce using rule 91
	'for'          reduce using rule 91
	'func'         reduce using rule 91
	'if'           reduce using rule 91
	'local'        reduce using rule 91
	'proc'         reduce using rule 91
	'§'            reduce using rule 91
	'°'            reduce using rule 91
	L_BTry         reduce using rule 91
	L_BCatch       reduce using rule 91
	L_BLoop        reduce using rule 91
	L_BCase        reduce using rule 91
	L_BPlus        reduce using rule 91
	L_BMinus       reduce using rule 91
	L_BNot         reduce using rule 91
	L_BLBra        reduce using rule 91
	L_BBool        reduce using rule 91
	L_BReturn      reduce using rule 91
	L_BExit        reduce using rule 91
	L_BContinue    reduce using rule 91
	L_BExitOn      reduce using rule 91
	L_BIdent       reduce using rule 91
	L_BInteger     reduce using rule 91
	L_BReal        reduce using rule 91
	L_BChar        reduce using rule 91
	L_BString      reduce using rule 91


State 201

	Stmt -> Expr ';' .                                  (rule 97)

	'('            reduce using rule 97
	'++'           reduce using rule 97
	'--'           reduce using rule 97
	'const'        reduce using rule 97
	'create'       reduce using rule 97
	'else'         reduce using rule 97
	'elseif'       reduce using rule 97
	'end'          reduce using rule 97
	'for'          reduce using rule 97
	'func'         reduce using rule 97
	'if'           reduce using rule 97
	'local'        reduce using rule 97
	'proc'         reduce using rule 97
	'§'            reduce using rule 97
	'°'            reduce using rule 97
	L_BTry         reduce using rule 97
	L_BCatch       reduce using rule 97
	L_BLoop        reduce using rule 97
	L_BCase        reduce using rule 97
	L_BPlus        reduce using rule 97
	L_BMinus       reduce using rule 97
	L_BNot         reduce using rule 97
	L_BLBra        reduce using rule 97
	L_BBool        reduce using rule 97
	L_BReturn      reduce using rule 97
	L_BExit        reduce using rule 97
	L_BContinue    reduce using rule 97
	L_BExitOn      reduce using rule 97
	L_BIdent       reduce using rule 97
	L_BInteger     reduce using rule 97
	L_BReal        reduce using rule 97
	L_BChar        reduce using rule 97
	L_BString      reduce using rule 97


State 202

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	LoopCmd -> BExitOn Expr .                           (rule 106)

	';'            reduce using rule 106
	'if'           shift, and enter state 106


State 203

	Stmt -> BReturn ';' .                               (rule 93)

	'('            reduce using rule 93
	'++'           reduce using rule 93
	'--'           reduce using rule 93
	'const'        reduce using rule 93
	'create'       reduce using rule 93
	'else'         reduce using rule 93
	'elseif'       reduce using rule 93
	'end'          reduce using rule 93
	'for'          reduce using rule 93
	'func'         reduce using rule 93
	'if'           reduce using rule 93
	'local'        reduce using rule 93
	'proc'         reduce using rule 93
	'§'            reduce using rule 93
	'°'            reduce using rule 93
	L_BTry         reduce using rule 93
	L_BCatch       reduce using rule 93
	L_BLoop        reduce using rule 93
	L_BCase        reduce using rule 93
	L_BPlus        reduce using rule 93
	L_BMinus       reduce using rule 93
	L_BNot         reduce using rule 93
	L_BLBra        reduce using rule 93
	L_BBool        reduce using rule 93
	L_BReturn      reduce using rule 93
	L_BExit        reduce using rule 93
	L_BContinue    reduce using rule 93
	L_BExitOn      reduce using rule 93
	L_BIdent       reduce using rule 93
	L_BInteger     reduce using rule 93
	L_BReal        reduce using rule 93
	L_BChar        reduce using rule 93
	L_BString      reduce using rule 93


State 204

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> BCase Expr . 'of' Cases 'end' BCase         (rule 94)

	'if'           shift, and enter state 106
	'of'           shift, and enter state 210


State 205

	Stmt -> BLoop ListStmt . 'end' BLoop                (rule 90)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          shift, and enter state 209
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 206

	Stmt -> BTry ListStmt . BCatch ListStmt 'end' BCatch    (rule 98)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BCatch       shift, and enter state 208
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BCatch         goto state 207
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 207

	Stmt -> BTry ListStmt BCatch . ListStmt 'end' BCatch    (rule 98)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 227

State 208

	BCatch -> L_BCatch .                                (rule 2)

	'('            reduce using rule 2
	'++'           reduce using rule 2
	'--'           reduce using rule 2
	'const'        reduce using rule 2
	'create'       reduce using rule 2
	'else'         reduce using rule 2
	'elseif'       reduce using rule 2
	'end'          reduce using rule 2
	'for'          reduce using rule 2
	'func'         reduce using rule 2
	'if'           reduce using rule 2
	'local'        reduce using rule 2
	'proc'         reduce using rule 2
	'§'            reduce using rule 2
	'°'            reduce using rule 2
	L_BTry         reduce using rule 2
	L_BCatch       reduce using rule 2
	L_BLoop        reduce using rule 2
	L_BCase        reduce using rule 2
	L_BPlus        reduce using rule 2
	L_BMinus       reduce using rule 2
	L_BNot         reduce using rule 2
	L_BLBra        reduce using rule 2
	L_BBool        reduce using rule 2
	L_BReturn      reduce using rule 2
	L_BExit        reduce using rule 2
	L_BContinue    reduce using rule 2
	L_BExitOn      reduce using rule 2
	L_BIdent       reduce using rule 2
	L_BInteger     reduce using rule 2
	L_BReal        reduce using rule 2
	L_BChar        reduce using rule 2
	L_BString      reduce using rule 2


State 209

	Stmt -> BLoop ListStmt 'end' . BLoop                (rule 90)

	L_BLoop        shift, and enter state 178

	BLoop          goto state 226

State 210

	Stmt -> BCase Expr 'of' . Cases 'end' BCase         (rule 94)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'else'         shift, and enter state 225
	'end'          reduce using rule 109
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 223
	Expr4          goto state 56
	Cases          goto state 224
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 211

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> LeftExpr BAss Expr . ';'                    (rule 88)

	';'            shift, and enter state 222
	'if'           shift, and enter state 106


State 212

	Stmt -> 'for' '(' BIdent . ':' BType BAss Expr Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	':'            shift, and enter state 221


State 213

	Stmt -> 'if' Expr 'then' . ListStmt ElseStmt 'end' 'if'    (rule 89)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'else'         reduce using rule 102
	'elseif'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 220

State 214

	Stmt -> 'local' ListStmt 'end' . 'local'            (rule 95)

	'local'        shift, and enter state 219


State 215

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type . ')' 'is' ListStmt 'end' BIdent    (rule 36)

	')'            shift, and enter state 218


State 216

	Expr7 -> 'create' 'Array' BLe Type BGr '(' . Expr ')'    (rule 51)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 217
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 217

	Expr7 -> 'create' 'Array' BLe Type BGr '(' Expr . ')'    (rule 51)
	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)

	')'            shift, and enter state 237
	'if'           shift, and enter state 106


State 218

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' . 'is' ListStmt 'end' BIdent    (rule 36)

	'is'           shift, and enter state 236


State 219

	Stmt -> 'local' ListStmt 'end' 'local' .            (rule 95)

	'('            reduce using rule 95
	'++'           reduce using rule 95
	'--'           reduce using rule 95
	'const'        reduce using rule 95
	'create'       reduce using rule 95
	'else'         reduce using rule 95
	'elseif'       reduce using rule 95
	'end'          reduce using rule 95
	'for'          reduce using rule 95
	'func'         reduce using rule 95
	'if'           reduce using rule 95
	'local'        reduce using rule 95
	'proc'         reduce using rule 95
	'§'            reduce using rule 95
	'°'            reduce using rule 95
	L_BTry         reduce using rule 95
	L_BCatch       reduce using rule 95
	L_BLoop        reduce using rule 95
	L_BCase        reduce using rule 95
	L_BPlus        reduce using rule 95
	L_BMinus       reduce using rule 95
	L_BNot         reduce using rule 95
	L_BLBra        reduce using rule 95
	L_BBool        reduce using rule 95
	L_BReturn      reduce using rule 95
	L_BExit        reduce using rule 95
	L_BContinue    reduce using rule 95
	L_BExitOn      reduce using rule 95
	L_BIdent       reduce using rule 95
	L_BInteger     reduce using rule 95
	L_BReal        reduce using rule 95
	L_BChar        reduce using rule 95
	L_BString      reduce using rule 95


State 220

	Stmt -> 'if' Expr 'then' ListStmt . ElseStmt 'end' 'if'    (rule 89)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'else'         shift, and enter state 234
	'elseif'       shift, and enter state 235
	'end'          reduce using rule 101
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	ElseStmt       goto state 233
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 221

	Stmt -> 'for' '(' BIdent ':' . BType BAss Expr Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	'bool'         shift, and enter state 18
	'char'         shift, and enter state 19
	'int'          shift, and enter state 20
	'real'         shift, and enter state 21
	'string'       shift, and enter state 22

	BType          goto state 232

State 222

	Stmt -> LeftExpr BAss Expr ';' .                    (rule 88)

	'('            reduce using rule 88
	'++'           reduce using rule 88
	'--'           reduce using rule 88
	'const'        reduce using rule 88
	'create'       reduce using rule 88
	'else'         reduce using rule 88
	'elseif'       reduce using rule 88
	'end'          reduce using rule 88
	'for'          reduce using rule 88
	'func'         reduce using rule 88
	'if'           reduce using rule 88
	'local'        reduce using rule 88
	'proc'         reduce using rule 88
	'§'            reduce using rule 88
	'°'            reduce using rule 88
	L_BTry         reduce using rule 88
	L_BCatch       reduce using rule 88
	L_BLoop        reduce using rule 88
	L_BCase        reduce using rule 88
	L_BPlus        reduce using rule 88
	L_BMinus       reduce using rule 88
	L_BNot         reduce using rule 88
	L_BLBra        reduce using rule 88
	L_BBool        reduce using rule 88
	L_BReturn      reduce using rule 88
	L_BExit        reduce using rule 88
	L_BContinue    reduce using rule 88
	L_BExitOn      reduce using rule 88
	L_BIdent       reduce using rule 88
	L_BInteger     reduce using rule 88
	L_BReal        reduce using rule 88
	L_BChar        reduce using rule 88
	L_BString      reduce using rule 88


State 223

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Cases -> Expr . '->' ListStmt Cases                 (rule 111)

	'->'           shift, and enter state 231
	'if'           shift, and enter state 106


State 224

	Stmt -> BCase Expr 'of' Cases . 'end' BCase         (rule 94)

	'end'          shift, and enter state 230


State 225

	Cases -> 'else' . ListStmt                          (rule 110)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 229

State 226

	Stmt -> BLoop ListStmt 'end' BLoop .                (rule 90)

	'('            reduce using rule 90
	'++'           reduce using rule 90
	'--'           reduce using rule 90
	'const'        reduce using rule 90
	'create'       reduce using rule 90
	'else'         reduce using rule 90
	'elseif'       reduce using rule 90
	'end'          reduce using rule 90
	'for'          reduce using rule 90
	'func'         reduce using rule 90
	'if'           reduce using rule 90
	'local'        reduce using rule 90
	'proc'         reduce using rule 90
	'§'            reduce using rule 90
	'°'            reduce using rule 90
	L_BTry         reduce using rule 90
	L_BCatch       reduce using rule 90
	L_BLoop        reduce using rule 90
	L_BCase        reduce using rule 90
	L_BPlus        reduce using rule 90
	L_BMinus       reduce using rule 90
	L_BNot         reduce using rule 90
	L_BLBra        reduce using rule 90
	L_BBool        reduce using rule 90
	L_BReturn      reduce using rule 90
	L_BExit        reduce using rule 90
	L_BContinue    reduce using rule 90
	L_BExitOn      reduce using rule 90
	L_BIdent       reduce using rule 90
	L_BInteger     reduce using rule 90
	L_BReal        reduce using rule 90
	L_BChar        reduce using rule 90
	L_BString      reduce using rule 90


State 227

	Stmt -> BTry ListStmt BCatch ListStmt . 'end' BCatch    (rule 98)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          shift, and enter state 228
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 228

	Stmt -> BTry ListStmt BCatch ListStmt 'end' . BCatch    (rule 98)

	L_BCatch       shift, and enter state 208

	BCatch         goto state 245

State 229

	ListStmt -> ListStmt . Stmt                         (rule 103)
	Cases -> 'else' ListStmt .                          (rule 110)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          reduce using rule 110
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 230

	Stmt -> BCase Expr 'of' Cases 'end' . BCase         (rule 94)

	L_BCase        shift, and enter state 179

	BCase          goto state 244

State 231

	Cases -> Expr '->' . ListStmt Cases                 (rule 111)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'else'         reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 243

State 232

	Stmt -> 'for' '(' BIdent ':' BType . BAss Expr Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	L_BAss         shift, and enter state 37

	BAss           goto state 242

State 233

	Stmt -> 'if' Expr 'then' ListStmt ElseStmt . 'end' 'if'    (rule 89)

	'end'          shift, and enter state 241


State 234

	ElseStmt -> 'else' . ListStmt                       (rule 100)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 240

State 235

	ElseStmt -> 'elseif' . Expr 'then' ListStmt ElseStmt    (rule 99)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 239
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 236

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' . ListStmt 'end' BIdent    (rule 36)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 238

State 237

	Expr7 -> 'create' 'Array' BLe Type BGr '(' Expr ')' .    (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	'->'           reduce using rule 51
	';'            reduce using rule 51
	'<-'           reduce using rule 51
	']'            reduce using rule 51
	'else'         reduce using rule 51
	'if'           reduce using rule 51
	'of'           reduce using rule 51
	'then'         reduce using rule 51
	L_BPlus        reduce using rule 51
	L_BMinus       reduce using rule 51
	L_BDiv         reduce using rule 51
	L_BMul         reduce using rule 51
	L_BUpTo        reduce using rule 51
	L_BMod         reduce using rule 51
	L_BAnd         reduce using rule 51
	L_BOr          reduce using rule 51
	L_BLe          reduce using rule 51
	L_BLeEq        reduce using rule 51
	L_BGr          reduce using rule 51
	L_BGrEq        reduce using rule 51
	L_BNotEq       reduce using rule 51
	L_BEq          reduce using rule 51


State 238

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt . 'end' BIdent    (rule 36)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          shift, and enter state 251
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 239

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	ElseStmt -> 'elseif' Expr . 'then' ListStmt ElseStmt    (rule 99)

	'if'           shift, and enter state 106
	'then'         shift, and enter state 250


State 240

	ElseStmt -> 'else' ListStmt .                       (rule 100)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          reduce using rule 100
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 241

	Stmt -> 'if' Expr 'then' ListStmt ElseStmt 'end' . 'if'    (rule 89)

	'if'           shift, and enter state 249


State 242

	Stmt -> 'for' '(' BIdent ':' BType BAss . Expr Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 248
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 243

	ListStmt -> ListStmt . Stmt                         (rule 103)
	Cases -> Expr '->' ListStmt . Cases                 (rule 111)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'else'         shift, and enter state 225
	'end'          reduce using rule 109
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 246
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	Cases          goto state 247
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 244

	Stmt -> BCase Expr 'of' Cases 'end' BCase .         (rule 94)

	'('            reduce using rule 94
	'++'           reduce using rule 94
	'--'           reduce using rule 94
	'const'        reduce using rule 94
	'create'       reduce using rule 94
	'else'         reduce using rule 94
	'elseif'       reduce using rule 94
	'end'          reduce using rule 94
	'for'          reduce using rule 94
	'func'         reduce using rule 94
	'if'           reduce using rule 94
	'local'        reduce using rule 94
	'proc'         reduce using rule 94
	'§'            reduce using rule 94
	'°'            reduce using rule 94
	L_BTry         reduce using rule 94
	L_BCatch       reduce using rule 94
	L_BLoop        reduce using rule 94
	L_BCase        reduce using rule 94
	L_BPlus        reduce using rule 94
	L_BMinus       reduce using rule 94
	L_BNot         reduce using rule 94
	L_BLBra        reduce using rule 94
	L_BBool        reduce using rule 94
	L_BReturn      reduce using rule 94
	L_BExit        reduce using rule 94
	L_BContinue    reduce using rule 94
	L_BExitOn      reduce using rule 94
	L_BIdent       reduce using rule 94
	L_BInteger     reduce using rule 94
	L_BReal        reduce using rule 94
	L_BChar        reduce using rule 94
	L_BString      reduce using rule 94


State 245

	Stmt -> BTry ListStmt BCatch ListStmt 'end' BCatch .    (rule 98)

	'('            reduce using rule 98
	'++'           reduce using rule 98
	'--'           reduce using rule 98
	'const'        reduce using rule 98
	'create'       reduce using rule 98
	'else'         reduce using rule 98
	'elseif'       reduce using rule 98
	'end'          reduce using rule 98
	'for'          reduce using rule 98
	'func'         reduce using rule 98
	'if'           reduce using rule 98
	'local'        reduce using rule 98
	'proc'         reduce using rule 98
	'§'            reduce using rule 98
	'°'            reduce using rule 98
	L_BTry         reduce using rule 98
	L_BCatch       reduce using rule 98
	L_BLoop        reduce using rule 98
	L_BCase        reduce using rule 98
	L_BPlus        reduce using rule 98
	L_BMinus       reduce using rule 98
	L_BNot         reduce using rule 98
	L_BLBra        reduce using rule 98
	L_BBool        reduce using rule 98
	L_BReturn      reduce using rule 98
	L_BExit        reduce using rule 98
	L_BContinue    reduce using rule 98
	L_BExitOn      reduce using rule 98
	L_BIdent       reduce using rule 98
	L_BInteger     reduce using rule 98
	L_BReal        reduce using rule 98
	L_BChar        reduce using rule 98
	L_BString      reduce using rule 98


State 246

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> Expr . ';'                                  (rule 97)
	Cases -> Expr . '->' ListStmt Cases                 (rule 111)

	'->'           shift, and enter state 231
	';'            shift, and enter state 201
	'if'           shift, and enter state 106


State 247

	Cases -> Expr '->' ListStmt Cases .                 (rule 111)

	'end'          reduce using rule 111


State 248

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> 'for' '(' BIdent ':' BType BAss Expr . Dir Expr ')' ListStmt 'end' 'for'    (rule 92)

	'->'           shift, and enter state 255
	'<-'           shift, and enter state 256
	'if'           shift, and enter state 106

	Dir            goto state 254

State 249

	Stmt -> 'if' Expr 'then' ListStmt ElseStmt 'end' 'if' .    (rule 89)

	'('            reduce using rule 89
	'++'           reduce using rule 89
	'--'           reduce using rule 89
	'const'        reduce using rule 89
	'create'       reduce using rule 89
	'else'         reduce using rule 89
	'elseif'       reduce using rule 89
	'end'          reduce using rule 89
	'for'          reduce using rule 89
	'func'         reduce using rule 89
	'if'           reduce using rule 89
	'local'        reduce using rule 89
	'proc'         reduce using rule 89
	'§'            reduce using rule 89
	'°'            reduce using rule 89
	L_BTry         reduce using rule 89
	L_BCatch       reduce using rule 89
	L_BLoop        reduce using rule 89
	L_BCase        reduce using rule 89
	L_BPlus        reduce using rule 89
	L_BMinus       reduce using rule 89
	L_BNot         reduce using rule 89
	L_BLBra        reduce using rule 89
	L_BBool        reduce using rule 89
	L_BReturn      reduce using rule 89
	L_BExit        reduce using rule 89
	L_BContinue    reduce using rule 89
	L_BExitOn      reduce using rule 89
	L_BIdent       reduce using rule 89
	L_BInteger     reduce using rule 89
	L_BReal        reduce using rule 89
	L_BChar        reduce using rule 89
	L_BString      reduce using rule 89


State 250

	ElseStmt -> 'elseif' Expr 'then' . ListStmt ElseStmt    (rule 99)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'else'         reduce using rule 102
	'elseif'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 253

State 251

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' . BIdent    (rule 36)

	L_BIdent       shift, and enter state 10

	BIdent         goto state 252

State 252

	Decl -> 'func' BIdent '(' ListParam ')' '->' '(' BIdent ':' Type ')' 'is' ListStmt 'end' BIdent .    (rule 36)

	'('            reduce using rule 36
	'++'           reduce using rule 36
	'--'           reduce using rule 36
	'const'        reduce using rule 36
	'create'       reduce using rule 36
	'else'         reduce using rule 36
	'elseif'       reduce using rule 36
	'end'          reduce using rule 36
	'for'          reduce using rule 36
	'func'         reduce using rule 36
	'if'           reduce using rule 36
	'local'        reduce using rule 36
	'proc'         reduce using rule 36
	'§'            reduce using rule 36
	'°'            reduce using rule 36
	L_BTry         reduce using rule 36
	L_BCatch       reduce using rule 36
	L_BLoop        reduce using rule 36
	L_BCase        reduce using rule 36
	L_BPlus        reduce using rule 36
	L_BMinus       reduce using rule 36
	L_BNot         reduce using rule 36
	L_BLBra        reduce using rule 36
	L_BBool        reduce using rule 36
	L_BReturn      reduce using rule 36
	L_BExit        reduce using rule 36
	L_BContinue    reduce using rule 36
	L_BExitOn      reduce using rule 36
	L_BIdent       reduce using rule 36
	L_BInteger     reduce using rule 36
	L_BReal        reduce using rule 36
	L_BChar        reduce using rule 36
	L_BString      reduce using rule 36
	%eof           reduce using rule 36


State 253

	ElseStmt -> 'elseif' Expr 'then' ListStmt . ElseStmt    (rule 99)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'else'         shift, and enter state 234
	'elseif'       shift, and enter state 235
	'end'          reduce using rule 101
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	ElseStmt       goto state 258
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 254

	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir . Expr ')' ListStmt 'end' 'for'    (rule 92)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'create'       shift, and enter state 63
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BIdent         goto state 43
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 257
	Expr4          goto state 56
	LeftExpr1      goto state 57
	LeftExpr       goto state 58
	Val            goto state 59

State 255

	Dir -> '->' .                                       (rule 104)

	'('            reduce using rule 104
	'++'           reduce using rule 104
	'--'           reduce using rule 104
	'create'       reduce using rule 104
	'§'            reduce using rule 104
	'°'            reduce using rule 104
	L_BPlus        reduce using rule 104
	L_BMinus       reduce using rule 104
	L_BNot         reduce using rule 104
	L_BLBra        reduce using rule 104
	L_BBool        reduce using rule 104
	L_BIdent       reduce using rule 104
	L_BInteger     reduce using rule 104
	L_BReal        reduce using rule 104
	L_BChar        reduce using rule 104
	L_BString      reduce using rule 104


State 256

	Dir -> '<-' .                                       (rule 105)

	'('            reduce using rule 105
	'++'           reduce using rule 105
	'--'           reduce using rule 105
	'create'       reduce using rule 105
	'§'            reduce using rule 105
	'°'            reduce using rule 105
	L_BPlus        reduce using rule 105
	L_BMinus       reduce using rule 105
	L_BNot         reduce using rule 105
	L_BLBra        reduce using rule 105
	L_BBool        reduce using rule 105
	L_BIdent       reduce using rule 105
	L_BInteger     reduce using rule 105
	L_BReal        reduce using rule 105
	L_BChar        reduce using rule 105
	L_BString      reduce using rule 105


State 257

	Expr -> Expr . 'if' Expr 'else' Expr                (rule 76)
	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir Expr . ')' ListStmt 'end' 'for'    (rule 92)

	')'            shift, and enter state 259
	'if'           shift, and enter state 106


State 258

	ElseStmt -> 'elseif' Expr 'then' ListStmt ElseStmt .    (rule 99)

	'end'          reduce using rule 99


State 259

	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir Expr ')' . ListStmt 'end' 'for'    (rule 92)

	'('            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'const'        reduce using rule 102
	'create'       reduce using rule 102
	'end'          reduce using rule 102
	'for'          reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'local'        reduce using rule 102
	'proc'         reduce using rule 102
	'§'            reduce using rule 102
	'°'            reduce using rule 102
	L_BTry         reduce using rule 102
	L_BLoop        reduce using rule 102
	L_BCase        reduce using rule 102
	L_BPlus        reduce using rule 102
	L_BMinus       reduce using rule 102
	L_BNot         reduce using rule 102
	L_BLBra        reduce using rule 102
	L_BBool        reduce using rule 102
	L_BReturn      reduce using rule 102
	L_BExit        reduce using rule 102
	L_BContinue    reduce using rule 102
	L_BExitOn      reduce using rule 102
	L_BIdent       reduce using rule 102
	L_BInteger     reduce using rule 102
	L_BReal        reduce using rule 102
	L_BChar        reduce using rule 102
	L_BString      reduce using rule 102

	ListStmt       goto state 260

State 260

	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir Expr ')' ListStmt . 'end' 'for'    (rule 92)
	ListStmt -> ListStmt . Stmt                         (rule 103)

	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'--'           shift, and enter state 62
	'const'        shift, and enter state 7
	'create'       shift, and enter state 63
	'end'          shift, and enter state 261
	'for'          shift, and enter state 175
	'func'         shift, and enter state 8
	'if'           shift, and enter state 176
	'local'        shift, and enter state 177
	'proc'         shift, and enter state 9
	'§'            shift, and enter state 64
	'°'            shift, and enter state 65
	L_BTry         shift, and enter state 2
	L_BLoop        shift, and enter state 178
	L_BCase        shift, and enter state 179
	L_BPlus        shift, and enter state 66
	L_BMinus       shift, and enter state 67
	L_BNot         shift, and enter state 68
	L_BLBra        shift, and enter state 69
	L_BBool        shift, and enter state 70
	L_BReturn      shift, and enter state 180
	L_BExit        shift, and enter state 181
	L_BContinue    shift, and enter state 182
	L_BExitOn      shift, and enter state 183
	L_BIdent       shift, and enter state 10
	L_BInteger     shift, and enter state 71
	L_BReal        shift, and enter state 72
	L_BChar        shift, and enter state 73
	L_BString      shift, and enter state 74

	BTry           goto state 161
	BLoop          goto state 162
	BCase          goto state 163
	BPlus          goto state 38
	BMinus         goto state 39
	BNot           goto state 40
	BLBra          goto state 41
	BBool          goto state 42
	BReturn        goto state 164
	BExit          goto state 165
	BContinue      goto state 166
	BExitOn        goto state 167
	BIdent         goto state 168
	BInteger       goto state 44
	BReal          goto state 45
	BChar          goto state 46
	BString        goto state 47
	Decl           goto state 169
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr0          goto state 54
	Expr           goto state 170
	Expr4          goto state 56
	Stmt           goto state 171
	LoopCmd        goto state 172
	LeftExpr1      goto state 57
	LeftExpr       goto state 173
	Val            goto state 59

State 261

	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir Expr ')' ListStmt 'end' . 'for'    (rule 92)

	'for'          shift, and enter state 262


State 262

	Stmt -> 'for' '(' BIdent ':' BType BAss Expr Dir Expr ')' ListStmt 'end' 'for' .    (rule 92)

	'('            reduce using rule 92
	'++'           reduce using rule 92
	'--'           reduce using rule 92
	'const'        reduce using rule 92
	'create'       reduce using rule 92
	'else'         reduce using rule 92
	'elseif'       reduce using rule 92
	'end'          reduce using rule 92
	'for'          reduce using rule 92
	'func'         reduce using rule 92
	'if'           reduce using rule 92
	'local'        reduce using rule 92
	'proc'         reduce using rule 92
	'§'            reduce using rule 92
	'°'            reduce using rule 92
	L_BTry         reduce using rule 92
	L_BCatch       reduce using rule 92
	L_BLoop        reduce using rule 92
	L_BCase        reduce using rule 92
	L_BPlus        reduce using rule 92
	L_BMinus       reduce using rule 92
	L_BNot         reduce using rule 92
	L_BLBra        reduce using rule 92
	L_BBool        reduce using rule 92
	L_BReturn      reduce using rule 92
	L_BExit        reduce using rule 92
	L_BContinue    reduce using rule 92
	L_BExitOn      reduce using rule 92
	L_BIdent       reduce using rule 92
	L_BInteger     reduce using rule 92
	L_BReal        reduce using rule 92
	L_BChar        reduce using rule 92
	L_BString      reduce using rule 92


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 134
Number of terminals: 65
Number of non-terminals: 61
Number of states: 263
